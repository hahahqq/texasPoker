<template>
	<div>
		<!-- 赛事盈利分析 -->
		<div class="m-bottom-sm bg-F1F2F3 padding-sm">
			<div class="m-bottom-xs">
				<span class="font-14 font-600">{{ pageInfo[pageList[0].value] }}</span>
			</div>
			<el-row :gutter="20">
				<el-col :xs="8" :sm="6" v-for="(item, i) in pageList" :key="i" class="m-bottom-xs">
					<div class="inline-block">
						<span>{{ item.label }}：</span>
					</div>
					<div class="inline-block" v-if="pageInfo[item.value]">
						<span v-if="i == 2 || i == 3">
							{{ new Date(pageInfo[item.value]) | formatTime }}
						</span>
						<span v-else>{{ pageInfo[item.value] }}</span>
					</div>
					<div class="inline-block" v-else>0</div>
				</el-col>
			</el-row>
		</div>
		<div>
			<el-table
				border
				:data="tableList"
				v-loading="loading"
				:height="tHeight"
				header-row-class-name="bg-F1F2F3"
			>
				<el-table-column
					type="index"
					label="序号"
					align="right"
					width="50"
				></el-table-column>
				<el-table-column label="会员信息">
					<template slot-scope="scope">
						<div class="relative" style="line-height: 1.5; padding-left: 55px">
							<img
								:onerror="$store.state.defaultImg"
								:src="scope.row.IMAGEURL ? scope.row.IMAGEURL : 'no'"
								style="width: 45px; left: 0"
								class="absolute translateY-center block"
								alt="图片"
							/>
							<div>{{ scope.row.VIPNAME }}</div>
							<div>{{ scope.row.VIPCODE }}</div>
							<!-- <div>{{ scope.row.VIPMOBILENO }}</div> -->
						</div>
					</template>
				</el-table-column>
				<el-table-column prop="BUYQTY" label="手数" align="right"></el-table-column>
				<el-table-column prop="BUYMONEY" label="买入积分" align="right"></el-table-column>
				<el-table-column
					prop="EXCHANGEMONEY"
					label="奖励积分"
					align="right"
				></el-table-column>
				<el-table-column prop="REWARDNAME" label="状态"></el-table-column>

				<!-- <el-table-column label="操作" align="right">
					<template slot-scope="scope">
						<el-button-group>
							<el-button
								size="small"
								type="text"
								@click="handleDel(scope.$index, scope.row)"
								icon="el-icon-delete"
							>
								删除
							</el-button>
						</el-button-group>
						<div class="hide">{{ scope.row }}</div>
					</template>
				</el-table-column> -->
			</el-table>
		</div>
	</div>
</template>
<script>
import { mapState, mapGetters } from "vuex";
import { indexQuery } from "@/store/modules2/report/indexFun.js";
export default {
	props: {
		typeData: {
			type: Object,
			default: function () {
				return {
					show: false,
					data: {
						ShopId: "",
						BillId: null
					}
				};
			}
		}
	},
	data() {
		return {
			loading: false,
			formData: { ShopId: "", BillId: null },
			pageInfo: {},
			tableList: [],
			pageList: [
				{ label: "赛事名称", value: "TYPENAME" },
				{ label: "赛事单号", value: "BILLID" },
				{ label: "开赛时间", value: "PLAYTIME" },
				{ label: "结束时间", value: "ENDTIME" },
				{ label: "店铺名称", value: "SHOPNAME" },
				{ label: "比赛桌号", value: "DESKNAME" },
				{ label: "参赛人数", value: "VIPCOUNT" },
				{ label: "买入手数", value: "TOTALQTY" },
				{ label: "买入积分", value: "BUYPRICE" },
				{ label: "服务费积分", value: "CHARGESMONEY" },
				{ label: "已兑换积分", value: "EXCHANGEMONEY" },
				{ label: "未兑换积分", value: "NOTEXCHANGEMONEY" },
				{ label: "盈利", value: "GAINMONEY" }
			],
			tHeight: 450
		};
	},
	computed: {
		...mapGetters({}),
		dataListState() {
			return this.$store.getters.cReportDataState.matchItem;
		}
	},
	watch: {
		typeData(data) {
			if (data.show) {
				this.defaultData();
			}
		},
		dataState(data) {
			if (this.loading) {
				if (data.success) {
					this.pageInfo = data.data.BillInfo;
					this.tableList = data.data.BuyList;
					console.log(111, data);
				} else {
					this.$message.error(data.message);
				}
			}
			this.loading = false;
		}
	},
	methods: {
		closeModal(v) {
			this.$emit("closeModal", v);
		},
		getNewData() {
			indexQuery.matchItem(this, "matchItem", this.formData);
			this.loading = true;
		},

		defaultData() {
			this.formData = Object.assign({}, this.typeData.data);
			this.getNewData();
		}
	},
	mounted() {
		if (this.typeData.show) {
			this.defaultData();
		}
	}
};
</script>
