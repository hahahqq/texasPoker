<template>
    <div class="login-container_sock login">
        <transition name="fade" mode="out-in">
            <div v-if="isRegister" class="login-container">
                <components :is="componentName" @closeModal="isRegister=false"></components>
            </div>
            <div v-else class="login-container">
                <el-form
                    :model="ruleForm2"
                    ref="ruleForm2"
                    label-position="left"
                    label-width="0px"
                    style="padding-top:10px;"
                >
                    <!-- <img :src="logoImg" class="block rounded-sm box-shadow" id="logo"> -->
                    <div class="login-container-title">
                        <span>登录</span>
                        <span class="login-container-title-lord">
                            <a :href="oldAdminURl">旧版本</a>
                        </span>
                    </div>
                    <el-form-item prop="AuthCode">
                        <div class="showEit-center-money-tt">
                            <span>手机号码</span>
                            <input
                                type="text"
                                class="showEit-input"
                                v-model="ruleForm2.AuthCode"
                                auto-complete="off"
                                placeholder="请输入注册手机号"
                            />
                        </div>
                    </el-form-item>
                    <el-form-item prop="UserCode">
                        <div class="showEit-center-money-tt">
                            <span>用户账号</span>
                            <input
                                type="text"
                                v-model="ruleForm2.UserCode"
                                class="showEit-input"
                                auto-complete="off"
                                placeholder="请输入用户账号\boss"
                            />
                        </div>
                    </el-form-item>
                    <el-form-item prop="Password">
                        <div class="showEit-center-money-tt">
                            <span>登录密码</span>
                            <input
                                type="password"
                                class="showEit-input"
                                v-model="ruleForm2.Password"
                                auto-complete="off"
                                placeholder="请输入密码"
                            />
                        </div>
                    </el-form-item>
                    <el-form-item style="width:100%;margin-top:30px;">
                        <el-row>
                            <el-col :span="12" style="color:#666666;cursor: pointer;">
                                <span @click="componentName='forgetPwdPage';isRegister=true">忘记密码？</span>
                            </el-col>
                            <el-col
                                :span="12"
                                style="text-align:right;color:#2589FF;cursor: pointer;"
                            >
                                <span @click="componentName='registerPage';isRegister=true">商家注册</span>
                            </el-col>
                        </el-row>
                    </el-form-item>
                    <el-form-item style="width:100%;margin-top:80px;">
                        <el-button
                            type="primary"
                            style="width:100%;"
                            @click.native.prevent="onSubmit"
                            :loading="loading"
                        >
                            <span>登录</span>
                        </el-button>
                    </el-form-item>
                    <div class="text-center">
                        <a @click="onExperience" class="textLogin">
                            <el-row>
                                <el-col :span="24" style="text-align:center;height:20px;">
                                    <div>
                                        <i
                                            v-if="loading2"
                                            class="icon-spin icon-refresh"
                                            style="color:#2589FF"
                                        ></i>
                                        <i v-else class="icon-refresh" style="color:#2589FF"></i>
                                        <span class="textLogin-tx">体验一下</span>
                                    </div>
                                </el-col>
                            </el-row>
                        </a>
                    </div>
                </el-form>
            </div>
        </transition>
        <el-dialog
            title="请选择门店"
            :visible.sync="dialogVisible"
            width="330px"
            :modal-append-to-body="false"
            :before-close="handleClose"
        >
            <div class="shopListClass">
                <ul>
                    <li v-for="(item,i) in shopList" :key="i" @click="setShop(item)">
                        <span>{{item.SHOPNAME}}</span>
                    </li>
                </ul>
            </div>
        </el-dialog>
        <div class="trade">
            <el-dialog
                :visible.sync="dialogVisibleTrade"
                width="330px"
                :modal-append-to-body="false"
                :before-close="handleCloseTrade"
            >
                <div class="shopListClassTrade">
                    <ul>
                        <li v-for="(item,i) in tradeList" :key="i" @click="setTrade(item)">
                            <div style="width:96%;margin-left:2%;margin-right:2%;">
                                <div class="name" :class="item.id==1? 'name1':''">
                                    <span>{{item.name}}</span>
                                </div>
                                <div class="title">{{item.title}}</div>
                            </div>
                        </li>
                    </ul>
                </div>
            </el-dialog>
            <el-dialog
                :visible.sync="dialogVisibleTradeMessages"
                width="350px"
                :modal-append-to-body="false"
                :before-close="handleCloseTradesadd"
            >
                <div class="bgwhitecolor home-border-r" style="padding:0;position: relative;">
                    <div>
                        <div class="renew-top">
                            <div>
                                <img
                                    src="static/images/renew.png"
                                    style="width:60px;height:50px;margin-top:6px;"
                                />
                            </div>
                            <div style="font-size:9px;">
                                <p>
                                    您好！您登陆的
                                    <span>【{{messageShopName}}】</span>
                                    已于{{gotimes}}到期,请联系客服续费后继续使用
                                </p>
                                <p>注: 在{{outimes}}之前你可继续查看数据，担不可以操作单据</p>
                            </div>
                        </div>
                        <div>
                            <img :src="messageImg" />
                        </div>
                        <div>
                            <el-button
                                type="primary"
                                size="medium"
                                round
                                @click="gouserChange"
                                style="width:90%;margin-left:5%;margin-right:5%;"
                            >继续使用</el-button>
                        </div>
                    </div>
                </div>
            </el-dialog>
            <el-dialog
                :visible.sync="dialogVisibleTradeMessage"
                width="350px"
                :modal-append-to-body="false"
                :before-close="handleCloseTrades"
            >
                <div class="bgwhitecolor home-border-r" style="padding:0;position: relative;">
                    <div>
                        <div class="renew-top">
                            <div>
                                <img src="static/images/renew.png" style="width:60px;height:50px;" />
                            </div>
                            <div style="font-size:9px;margin-top:10px;">
                                <p>
                                    您好！您登陆的
                                    <span>【{{messageShopName}}】</span>
                                    已于{{gotimes}}到期,请联系客服续费后继续使用
                                </p>
                            </div>
                        </div>
                        <div>
                            <img :src="messageImg" />
                        </div>
                        <div>
                            <el-button
                                type="primary"
                                size="medium"
                                round
                                @click="dialogVisibleTradeMessage = false"
                                style="width:90%;margin-left:5%;margin-right:5%;"
                            >关闭</el-button>
                        </div>
                    </div>
                </div>
            </el-dialog>
        </div>
    </div>
</template>
<script>
import CRYPTO from "crypto-js";
import { mapState, mapGetters } from "vuex";
import { getUserInfo } from "@/api/index";
import { nscreenexCodeFun } from "@/util/objectivity";
import dayjs from "dayjs";
import { ROOT_URL } from "@/util/define";
export default {
    name: "login",
    data() {
        return {
            dialogVisible: false,
            dialogVisibleTrade: false,
            ruleForm2: {
                AuthCode: "",
                UserCode: "",
                Password: ""
            },
            isRemember: true,
            isRegister: false,
            loading: false,
            loading2: false,
            componentName: "",
            logoImg: "static/images/testLogin2.png",
            tradeList: [
                {
                    id: 0,
                    name: "服务行业",
                    title:
                        "以会员为中心，支持储值卡、计次卡、时段卡多种充值消费方式"
                },
                {
                    id: 1,
                    name: "零售行业",
                    title: "以商品为中心，适用零售行业，简单好用"
                }
            ],
            CompanyCodeList: "",
            dialogVisibleTradeMessage: false,
            dialogVisibleTradeMessages: false,
            messageImg: "",
            invaliddateshow: "",
            messageShopName: "",
            gotimes: "",
            outimes: "",
            objShop: "",
            oldAdminURl: ROOT_URL + "/wechat/oldVersionKDB/login.html"
        };
    },
    computed: {
        ...mapGetters({
            STimeState: "STimeState",
            loginState: "loginState",
            shopListState: "shopListState",
            shopList: "shopList",
            experienceState: "experienceState",
            changePwdState: "changePwdState",
            AgentPermission: "AgentPermission"
        })
    },
    watch: {
        loginState(data) {
            if (data.success) {
                this.$store.dispatch("getPermissionInfo").then(() => {
                    this.$store.dispatch("getShopList");
                });
            } else {
                this.loading = false;
                this.$message.error(data.message);
            }
            this.CompanyCodeList = data.data.CompanyCode;
        },

        shopListState(data) {
            this.loading = false;
            this.loading2 = false;
            if (data.success) {
                if (
                    this.CompanyCodeList == 888 ||
                    this.CompanyCodeList == 889
                ) {
                    console.log("体验账号");
                    this.setShop(this.shopList[0]);
                    this.dialogVisibleTrade = false;
                    this.$router.push({
                        path: "/home"
                    });
                } else {
                    if (this.shopList.length == 1) {
                        this.setShop(this.shopList[0]);
                    } else if (this.shopList.length > 0) {
                        this.dialogVisible = true;
                    } else {
                        this.dialogVisible = false;
                        this.$router.push({
                            path: "/home"
                        });
                    }
                }
            }
        },
        experienceState(data) {
            if (data.success) {
                let sendData = {
                    AuthCode: data.data.authCode,
                    UserCode: data.data.userCode,
                    Password: data.data.password
                };
                this.toLogin(sendData);
            }
        },
        changePwdState(data) {
            if (data.success) {
                this.ruleForm2 = {
                    AuthCode: "",
                    UserCode: "",
                    Password: ""
                };
            }
        },
        AgentPermission(data) {
            if (data.success) {
                this.$store.dispatch("getShopList");
            } else {
                this.$message({
                    message: "用户账号权限存在问题，请重新登录",
                    type: "error"
                });
            }
        }
    },
    methods: {
        onSubmit() {
            this.loading = true;
            if (this.isRemember) {
                localStorage.setItem(
                    "isRemember",
                    JSON.stringify(this.ruleForm2)
                );
            }
            this.toLogin();
        },
        toLogin(data) {
            let sendData = {};
            if (data) {
                sendData = Object.assign({}, data);
            } else {
                sendData = {
                    AuthCode: this.ruleForm2.AuthCode,
                    UserCode: this.ruleForm2.UserCode,
                    Password: CRYPTO.MD5(this.ruleForm2.Password).toString()
                };
            }
            this.$store.dispatch("toLogin", sendData).then(() => {});
        },
        handleClose(done) {
            this.dialogVisible = false;
        },
        handleCloseTrade() {
            this.dialogVisibleTrade = false;
            this.loading2 = false;
        },
        handleCloseTrades() {
            this.dialogVisibleTradeMessage = false;
        },
        handleCloseTradesadd() {
            this.dialogVisibleTradeMessages = false;
        },

        setShop(item) {
            // 选择店铺
            let setDates = getUserInfo();
            this.messageImg = setDates.WechatImage2;
            this.messageShopName = item.NAME;
            this.invaliddateshow = item.INVALIDDATE; //显示店铺有效期
            let messageDate = new Date().getTime();
            let timse = new Date(this.getCustomDay(7, this.invaliddateshow));
            this.outimes = dayjs(new Date(timse)).format("YYYY-MM-DD");
            this.gotimes = dayjs(new Date(this.invaliddateshow)).format(
                "YYYY-MM-DD"
            );
            let a = new Date(this.invaliddateshow);
            let b = new Date(messageDate);
            let daysts = a - b;
            let dayst = timse - b;
            if (dayst >= 0) {
                if (daysts >= 0) {
                    this.dialogVisible = false;
                    this.$store.dispatch("choosingShop", item).then(() => {
                        this.$router.push({
                            path: "/home"
                        });
                    });
                } else {
                    this.dialogVisibleTradeMessages = true;
                    this.objShop = item;
                }
            } else if (dayst < 0) {
                this.dialogVisibleTradeMessage = true;
            }
        },
        gouserChange() {
            this.dialogVisible = false;
            this.$store.dispatch("choosingShop", this.objShop).then(() => {
                this.$router.push({
                    path: "/home"
                });
            });
        },

        setTrade(e) {
            this.$store.dispatch("toExperience", e.id).then(() => {
                this.loading2 = true;
            });
        },
        onExperience() {
            this.loading2 = true;
            this.dialogVisibleTrade = true;
        }
    },
    activated() {
        this.dialogVisible = false;
    },
    mounted() {
        let dd = localStorage.getItem("isRemember") || "{}";
        this.ruleForm2 = Object.assign({}, this.ruleForm2, JSON.parse(dd));
        this.$store.dispatch("getServerTime");
        this.dialogVisible = false;
        nscreenexCodeFun(1);
    },
    components: {
        registerPage: () => import("@/components/other/register"),
        forgetPwdPage: () => import("@/components/other/forgetPwd")
    }
};
</script>
<style scoped>
.shopListClassTrade {
    width: 100%;
    max-height: 245px;
    overflow: auto;
}
.shopListClassTrade .name {
    height: 40px;
    line-height: 40px;
    border-bottom: 1px solid #ccc;
    cursor: pointer;
    background: #3399ff;
    color: #ffffff;
    text-align: center;
    border-radius: 5px;
    margin: 8px 0;
    font-size: 16px;
}
.shopListClassTrade .name1 {
    height: 40px;
    line-height: 40px;
    border-bottom: 1px solid #ccc;
    cursor: pointer;
    background: #fca303;
    color: #ffffff;
    text-align: center;
    border-radius: 5px;
    margin: 8px 0;
    font-size: 16px;
}
.shopListClassTrade .title {
    font-size: 12px;
    color: #a1a2a3;
}
.showEit-center-money-tt {
    border-bottom: solid 1px #e3e3e3;
    height: 60px;
    line-height: 60px;
}
.showEit-input {
    border: none !important;
    margin-left: 20px;
}
.textLogin {
    cursor: pointer;
}
.icon-spinner {
    color: #3399ff;
}
.trade >>> .el-dialog__header {
    padding: 8px 16px 10px;
    background: #fff !important;
    color: #989898;
}
.trade >>> .el-dialog {
    display: flex;
    flex-direction: column;
    margin: 0 !important;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-height: calc(100% - 30px);
    max-width: calc(100% - 30px);
}
.trade >>> .el-dialog .el-dialog__body {
    flex: 1;
    overflow: auto;
}
.textLogin-tx {
    color: #2589ff;
}
.login-container-title-lord {
    font-size: 10px;
    color: #a1a2a3;
    position: absolute;
    right: 0px;
    cursor: pointer;
}
.renew-top {
    display: flex;
}
</style>