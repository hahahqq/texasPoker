<template>
	<!-- 商品销售-销售单据 -->
	<div v-loading="loading" class="paddingTB-md">
		<div class="row-flex flex-between flex-items-center">
			<div class="inline-block"><slot name="button"></slot></div>
			<div class="inline-block">
				<el-select
					size="small"
					v-model="formData.PayTypes"
					placeholder="请选择"
					style="width: 136px"
				>
					<el-option :value="0" label="全部"></el-option>
					<el-option
						v-for="(item, i) in payWayList"
						:key="i"
						:label="item.NAME"
						:value="item.ID"
					></el-option>
				</el-select>

				<el-input
					placeholder="请输入会员卡号/姓名"
					size="small"
					v-model="formData.VipCode"
					clearable
					style="width: 401px"
				>
					<template slot="append">
						<el-button size="small" type="primary" @click="getNewData">搜索</el-button>
					</template>
				</el-input>
			</div>
		</div>
		<div class="m-top-md">
			<!-- table-->
			<el-table
				border
				:data="tableList"
				header-row-class-name="bg-F1F2F3"
				class="full-width"
				ref="contentTable"
				:height="tableHeight"
			>
				<el-table-column
					prop="BILLNO"
					label="单号"
					width="130px"
					fixed="left"
				></el-table-column>
				<el-table-column prop="" label="日期" width="140px">
					<template slot-scope="scope">
						<span>{{ new Date(scope.row.BILLDATE) | formatTime }}</span>
					</template>
				</el-table-column>
				<el-table-column prop="SHOPNAME" label="店铺"></el-table-column>
				<el-table-column prop="QTY" label="销售数量" align="right"></el-table-column>
				<el-table-column prop="MONEY" label="金额" align="right"></el-table-column>
				<el-table-column prop="PAYTYPENAME" label="付款方式"></el-table-column>
				<el-table-column prop="VIPCODE" label="会员卡号" width="100px"></el-table-column>
				<el-table-column prop="VIPNAME" label="会员姓名"></el-table-column>
				<el-table-column
					prop="VIPMOBILENO"
					label="会员手机"
					width="110px"
				></el-table-column>
				<el-table-column prop="USERNAME" label="操作员"></el-table-column>
				<el-table-column prop="REMARK" label="备注" width="140px"></el-table-column>
				<el-table-column prop="" label="操作" width="130px" fixed="right" align="center">
					<template slot-scope="scope">
						<el-button
							type="text"
							size="small"
							@click="printFun(scope.row)"
							class="m-bottom-sm"
						>
							详细
						</el-button>
						<el-button
							type="text"
							size="small"
							@click="printFun(scope.row)"
							class="m-bottom-sm"
						>
							作废
						</el-button>
						<el-button type="text" size="small" @click="printFun(scope.row)">
							打印
						</el-button>
					</template>
				</el-table-column>
			</el-table>
			<!-- 分页 -->
			<div v-if="tableList.length > 0" class="m-top-sm clearfix">
				<el-pagination
					@size-change="handlePageChange"
					@current-change="handlePageChange"
					:current-page.sync="pagination.PN"
					:page-size="pagination.PageSize"
					layout="total,prev, pager, next, jumper"
					:total="pagination.TotalNumber"
					class="text-right"
				></el-pagination>
			</div>
			<div v-else style="height: 42px"></div>
		</div>
	</div>
</template>

<script>
import { mapState, mapGetters } from "vuex";
import { getHomeData } from "@/api/index";
import { indexQuery } from "@/store/modules2/report/indexFun.js";
const type = 1; // 销售单据
export default {
	props: {
		pageData: {
			type: Object,
			default: {
				show: false
			}
		}
	},
	data() {
		return {
			loading: false,
			formData: { ShopId: "", BeginDate: "", EndDate: "", PN: 1, PayTypes: 0, VipCode: "" },
			tableList: [],
			pagination: {
				TotalNumber: 0,
				PageNumber: 0,
				PageSize: 20,
				PN: 0
			},
			tableHeight: 300
		};
	},
	computed: {
		...mapGetters({
			payWayList: "rechargeListList"
		}),
		dataListState() {
			return this.$store.getters.cReportDataState.goodsSale;
		}
	},
	watch: {
		pageData(data) {
			if (data.show && data.type == type) {
				this.defaultData();
			}
		},
		dataListState(data) {
			if (this.loading) {
				if (data.success) {
					this.pagination = Object.assign({}, data.paying);
					this.tableList = [...data.List];
					console.log(11, data);
				} else {
					this.$message.error(data.message);
				}
			}
			this.loading = false;
		}
	},
	methods: {
		getNewData() {
			this.loading = true;
			indexQuery.goodsSale(this, "goodsSale", this.formData);
		},
		handlePageChange: function (currentPage) {
			if (this.formData.PN == currentPage || this.loading) {
				return;
			}
			this.formData.PN = parseInt(currentPage);
			this.getNewData();
		},
		printFun(item) {
			this.$message({
				type: "info",
				message: "开发中..."
			});
		},
		defaultData() {
			this.formData = Object.assign(this.formData, this.pageData, {
				PN: 1,
				PayTypes: 0,
				VipCode: ""
			});
			this.getNewData();
		},
		setHeight() {
			if (this.$refs.contentTable) {
				let top = this.$refs.contentTable.$el.getBoundingClientRect().top;
				let marginSpace = 10 * 3,
					pager = 42;
				this.$nextTick(() => {
					this.tableHeight = window.innerHeight - top - marginSpace - pager;
				});
			}
		}
	},
	mounted() {
		if (this.pageData.show && this.pageData.type == type) {
			this.defaultData();
		}
		this.setHeight();
	}
};
</script>
