<template>
    <div class="report row-flex flex-start">
        <section style="min-width:130px;margin-left:-10px;">
            <sidebarMenu :activePath="activePath" :routesList="routesList" :width="130"></sidebarMenu>
        </section>
        <section class="bg-white marginLR-sm paddingTB-sm paddingLR-md full-width" v-loading="loading">
            <filtePage @getNewData="getNewData" @chooseDateIdx1='chooseDateIdx1' @showZDMX='showZDMX' @setDZBL='setDZBL' @exportState="exportState" style='80%; float:left'></filtePage>
            <span style="float:right">
                店铺： 
                <el-select size='small' v-model="ShopId" @change='choseShopData' placeholder="请选择店铺" style='margin-top:10px' clearable >
                    <el-option v-for="(item,i) in shopList" :key="i" :label="item.NAME" :value="item.ID"></el-option>
                </el-select>
            </span>

            <!-- page -->
            <el-table :data='tableData' border size='small'
                height="470"
                header-row-class-name="bg-theme text-white"
                style="width: 100%; margin-top:10px;" >
                <el-table-column label="店铺" prop='SHOPNAME'></el-table-column>
                <el-table-column label="消费" align="center">
                    <el-table-column label="本店耗他店卡" prop='SALEMONEY' align="center"></el-table-column>
                    <el-table-column label="他店耗本店卡" prop='OTHERSALEMONEY' align="center"></el-table-column>
                </el-table-column>
 
                <el-table-column label="充值" align="center">
                    <el-table-column label="本店充值他店" prop='ADDMONEY' align="center"></el-table-column>
                    <el-table-column label="他店充值本店" prop='OTHERADDMONEY' align="center"></el-table-column>
                </el-table-column>
                <el-table-column label="应收金额" prop='COLLECTMONEY' align="center"></el-table-column>
                <el-table-column label="应付金额" prop='PAYMONEY' align="center"></el-table-column>
                <el-table-column label="对账金额" prop='RECONCILLATIONMONEY' align="center"></el-table-column>
                <el-table-column label="对账比例" align="center" width="80">
                    <template slot-scope="scope">
                        {{scope.row.RATE * 100 }}%
                    </template>
                </el-table-column>
                <el-table-column label="结算金额" prop='MONEY' align="center"></el-table-column>
                <el-table-column label="操作" width="70">
                    <template slot-scope="scope">
                        <el-button type='text' size="small" @click='showItem(scope.row)' >详情</el-button>
                    </template>
                </el-table-column>
            </el-table>
        </section>

        <el-dialog title='账单明细' :visible.sync="showItemDialog" append-to-body width='70%'>
            <el-button-group>
                <el-button plain
                    v-for="(label,i) in ['今天','昨天','本月','上月','其它']" :key="i" @click="chooseDate(i)"
                    type="primary" size="small" :class="{'isActive':chooseDateIdx==i}"
                >{{label}}</el-button>
            </el-button-group>

            <span style='margin-left:20px'>
                店铺： 
                <el-select size='small' v-model="ruleFrom.ShopId" @change="getNewDataItem" clearable placeholder="请选择店铺" style='margin-bottom:10px' >
                    <el-option v-for="(item,i) in shopList" :key="i" :label="item.NAME" :value="item.ID"></el-option>
                </el-select>
            </span>

            <el-button type="primary" size="small" class="m-left-sm" plain @click="exportItemState()" >
                <i class="el-icon-upload el-icon--right"></i> 导出表格
            </el-button>

            <div v-if="isShowDate" class="marginTB-sm">
                <el-date-picker
                    ref="dateBE"
                    v-model="dateBE"
                    @change="chooseDate2"
                    type="daterange"
                    value-format="timestamp"
                    range-separator="至"
                    start-placeholder="开始日期"
                    end-placeholder="结束日期"
                    style="width:400px;"
                    class="inline-block"
                ></el-date-picker>
            </div>

            <el-tabs v-model="activeName" @tab-click="handleClick">
                <el-tab-pane label="跨店消费明细" name="first">
                    <el-table :data='tabFirstData' border size='small' header-row-class-name="bg-theme text-white">
                        <el-table-column prop='SHOPNAME' label="开卡店铺"></el-table-column>
                        <el-table-column prop='OTHERSHOPNAME' label="消费店铺"></el-table-column>
                        <el-table-column prop='PAYMONEY' label='扣卡金额' width="70" align="center"></el-table-column>
                        <el-table-column label='对账比例' width="70" align="center">
                            <template slot-scope="scope">
                                {{scope.row.RATE * 100 }}%
                            </template>
                        </el-table-column>
                        <el-table-column prop='RATEPAYMONEY' label='实际对账价值' align="center"></el-table-column>
                        <el-table-column prop='BILLNO' label='订单号' width="130"></el-table-column>
                        <el-table-column label='完成日期' width="90">
                            <template slot-scope="scope">
                                {{new Date(scope.row.BILLDATE) | time}}
                            </template>
                        </el-table-column>
                        <el-table-column align="center" prop='VIPNAME' label='会员姓名' width="80"></el-table-column>
                        <el-table-column prop='MOBILENO' label='手机号'></el-table-column>
                    </el-table>

                    <div class="m-top-sm clearfix elpagination">
                        <el-pagination
                            @size-change="handlePageChange"
                            @current-change="handlePageChange"
                            :current-page.sync="pagination.PN"
                            :page-size="pagination.PageSize"
                            layout="total, prev, pager, next, jumper"
                            :total="pagination.TotalNumber"
                            class="text-center"
                        ></el-pagination>
                    </div>

                </el-tab-pane>
                <el-tab-pane label="跨店充值明细" name="second">
                    <el-table :data='tabSecondData' border size='small' header-row-class-name="bg-theme text-white">
                        <el-table-column prop='SHOPNAME' label="开卡门店"></el-table-column>
                        <el-table-column prop='OTHERSHOPNAME' label="充值门店"></el-table-column>
                        <el-table-column align="center" prop='ADDMONEY' label='支付金额' width="70"></el-table-column>
                        <el-table-column align="center" prop='GIFTMONEY' label='赠送金额' width="70"></el-table-column>
                        <el-table-column prop='RATEADDMONEY' label='实际入账价值' align="center"></el-table-column>
                        <el-table-column prop='BILLNO' label='订单号' width="130"></el-table-column>
                        <el-table-column align="center" label='完成日期' width="90">
                            <template slot-scope="scope">
                                {{new Date(scope.row.BILLDATE) | time}}
                            </template>
                        </el-table-column>
                        <el-table-column align="center" prop='VIPNAME' label='会员姓名' width="80"></el-table-column>
                        <el-table-column prop='MOBILENO' label='手机号'></el-table-column>
                    </el-table>
                    <div class="m-top-sm clearfix elpagination">
                        <el-pagination
                            @size-change="handlePageChange"
                            @current-change="handlePageChange"
                            :current-page.sync="pagination1.PN"
                            :page-size="pagination1.PageSize"
                            layout="total, prev, pager, next, jumper"
                            :total="pagination1.TotalNumber"
                            class="text-center"
                        ></el-pagination>
                    </div>

                </el-tab-pane>
            </el-tabs>
        </el-dialog>

        <el-dialog title = '设置对账比例' :visible.sync="showDZBLDialog" append-to-body width='40%'>
            对账比例： <el-input type="number" size="small" v-model.number="ReconciliaRate" placeholder="请输入数字" :max="100" style="width:100px"></el-input>  %
            <el-row style="margin-top:20px">
                <span style="color:#999; " >
                    该比例可用于储值卡有赠送金额的场景，跨店耗卡对账时会按照品牌内部商议好的公允价值结算。
                </span>
            </el-row>

            <el-row style='margin: 10px 0'>
                <el-col :xs='24' :sm='24' style='border-bottom:1px solid #dcdcdc; '></el-col>
            </el-row>

            <el-row style="color:#999">
                <el-col :span='24'>
                    举例说明: 客户在南山店充1000赠500，后到福田店使用此卡消费了200元。 则对账比例可设置为66.67%（比例=1000/1500）；
                </el-col>
                <el-col :span='24' style="margin-top: 10px">
                    此笔跨店消费南山店与福田店间的对账金额=200*66.67%=133.33元。
                </el-col>
            </el-row>

            <el-row style="margin-top:30px; text-align:right">
                <el-col>
                    <el-button size="small" @click="showDZBLDialog = false">取消</el-button>
                    <el-button type="primary" @click="submitSetRate()" size="small">确认</el-button>
                </el-col>
            </el-row>
        </el-dialog>
    </div>
</template>
<script>
import { mapState, mapGetters } from "vuex";
import { getHomeData, getUserInfo } from "@/api/index";
import MIXINS_REPORT from "@/mixins/report";
import MIXNINS_EXPORT from "@/mixins/exportData.js";
import dayjs from 'dayjs'
export default {
    mixins: [
        MIXINS_REPORT.SIDERBAR_MENU,
        MIXINS_REPORT.COMMOM_PAGE,
        MIXNINS_EXPORT.TOEXCEL,
        MIXNINS_EXPORT.TODATA
    ],
    data() {
        return {
            ReconciliaRate:'',
            tableData:[],
            activeName: 'first',
            loading: false,
            isShowDate: false,
            showItemDialog: false,
            curDate : {
                BeginDate: dayjs().startOf('day').valueOf() ,
                EndDate: new Date().getTime()
            },
            tabFirstData : [],
            tabSecondData : [],
            pagination: {
                TotalNumber: 0,
                PageNumber: 0,
                PageSize: 20,
                PN: 1
            },
            pagination1: {
                TotalNumber: 0,
                PageNumber: 0,
                PageSize: 20,
                PN: 1
            },
            ShopId: getHomeData().shop.ID,
            chooseDateIdx: 0,
            dateBE: [],
            ruleFrom: {
                ShopId: "",
                BeginDate: "1",
                EndDate: "9999999999999",
                PN:1
            },
            showDZBLDialog: false
        }
    },
    computed: {
        ...mapGetters({
            dataData: 'CrossStoreObj',
            shopList: "shopList",
            crossStoreSalesObj:'crossStoreSalesObj',
            crossStoreRechargeObj:'crossStoreRechargeObj',
            setReconciliaRateState:'setReconciliaRateState'
        })
    },
    watch: {
        dataData(data) {
            this.loading = false
            if(data.success){
                this.tableData = [...data.data.List]
            }else{
                this.$message.error(data.message) 
            }
        },
        crossStoreRechargeObj(data){
            if(data.success){
                let obj = data.data.PageData
                this.tabSecondData = data.data.PageData.DataArr
                this.pagination1 = {
                    PN: obj.PN,
                    PageNumber: obj.PageNumber,
                    PageSize: obj.PageSize,
                    TotalNumber: obj.TotalNumber
                }
            }
        },
        crossStoreSalesObj(data){
            if(data.success){
                let obj = data.data.PageData
                this.tabFirstData = data.data.PageData.DataArr
                this.pagination = {
                    PN: obj.PN,
                    PageNumber: obj.PageNumber,
                    PageSize: obj.PageSize,
                    TotalNumber: obj.TotalNumber
                }
            }
        },
        setReconciliaRateState(data){
            if(data.success){
                this.showDZBLDialog = false
                this.$store.dispatch("getPermissionInfo")
                this.choseShopData()
            }
            this.$message({
                type: data.success ? 'success' : 'error',
                message: data.message
            })
        }
    },
    methods: {
        submitSetRate(){
            this.$store.dispatch('setReconciliaRate', { ReconciliaRate: this.ReconciliaRate / 100} )
        },
        chooseDate(i) {
            this.chooseDateIdx = i;
            if (i < 4) {
                this.isShowDate = false;
            }
            switch (i) {
                case 0:
                    this.ruleFrom.BeginDate = this.getTimeStamp();
                    this.ruleFrom.EndDate = new Date().getTime();
                    this.getNewDataItem();
                    break;
                case 1:
                    this.ruleFrom.BeginDate = this.getTimeStamp(1);
                    this.ruleFrom.EndDate =
                        this.ruleFrom.BeginDate + 86400000 - 1;
                    this.getNewDataItem();
                    break;
                case 2:
                    let arr2 = this.getAroundMonth();
                    this.ruleFrom.BeginDate = new Date(arr2[0]).getTime();
                    this.ruleFrom.EndDate =
                        this.getTimeStampstatuesOutput(arr2[1]) + 86400000 - 1;
                    this.getNewDataItem();
                    break;
                case 3:
                    var nowdays = new Date();  
                    var year = nowdays.getFullYear();  
                    var month = nowdays.getMonth();  
                    if(month==0) {  
                        month=12;  
                        year=year-1;  
                    }  
                    if (month < 10) {
                        month = "0" + month;
                    }
                    var firstDay = year + "-" + month + "-" + "01";//上个月的第一天  
                    var myDate = new Date(year, month, 0);  //上个月最后一天
                    var lastDay = year + "-" + month + "-" + myDate.getDate();//上个月的最后一天

                    this.ruleFrom.BeginDate = dayjs(firstDay).valueOf()
                    this.ruleFrom.EndDate = dayjs(lastDay).valueOf()
                    this.getNewDataItem();
                    break;
                case 4:
                    this.isShowDate = !this.isShowDate;
                    break;
            }
        },
        chooseDate2(v) {
            this.ruleFrom.BeginDate = v[0];
            this.ruleFrom.EndDate = v[1];
            this.ruleFrom.PN = 1
            this.getNewDataItem();
        },
        handlePageChange: function(currentPage) {
            this.ruleFrom.PN = currentPage
            this.isFirstSales(this.ruleFrom)
        },
        handleClick(tab, event) {
            this.ruleFrom.PN = 1
            this.isFirstSales(this.ruleFrom)
        },
        getNewDataItem(){
            let sendData = {
                BeginDate: this.ruleFrom.BeginDate,
                EndDate: this.ruleFrom.EndDate, 
                PN: 1,
                ShopId: this.ruleFrom.ShopId
            }
            this.isFirstSales(sendData)   
        },
        isFirstSales(data){
            if(this.activeName == 'first'){
                this.$store.dispatch('getCrossStoreSalesItem', data)
            }else{
                this.$store.dispatch('getCrossStoreRechargeItem', data)
            }
        },
        showItem(row){
            this.showFirstTab(row.SHOPID)
        },
        showFirstTab(val){
            this.activeName = 'first'
            this.ruleFrom.ShopId = val
            this.ruleFrom.BeginDate = this.curDate.BeginDate
            this.ruleFrom.EndDate = this.curDate.EndDate
            this.showItemDialog = true
            let sendData = {
                BeginDate: this.curDate.BeginDate,
                EndDate: this.curDate.EndDate,
                PN: 1,
                ShopId: val
            }
            this.$store.dispatch('getCrossStoreSalesItem', sendData )
        },
        chooseDateIdx1(data){
            this.chooseDateIdx = data
        },
        showZDMX(data){
            this.showFirstTab(this.ShopId)
        },
        setDZBL(data){
            this.showDZBLDialog = true
        },
        exportItemState(){
            if(this.activeName == 'first'){
                let param = this.tabFirstData, newParam = []
                for(var i in param){
                    param[i].date = dayjs(param[i].BILLDATE).format('YYYY-MM-DD')
                    newParam.push(param[i])
                }
                let head = ['开卡店铺','消费店铺','折扣金额','对账比例','实际对账价值','订单号','完成日期','会员姓名','手机号']
                let val = ['SHOPNAME','OTHERSHOPNAME','PAYMONEY','RATE','RATEPAYMONEY','BILLNO','date','VIPNAME','MOBILENO']
                let title = "跨店消费明细" + this.getNowDateTime();
                if (newParam.length == 0) {
                    this.$message({ message: "数据不能为空", type: "success" })
                } else {
                    this.export2Excel(head, val, newParam, title);
                }
            }else{
                let param = this.tabSecondData, newParam = []
                for(var i in param){
                    param[i].date = dayjs(param[i].BILLDATE).format('YYYY-MM-DD')
                    newParam.push(param[i])
                }
                let head = ['开卡门店','充值门店','支付金额','赠送金额','实际入账价值','订单号','完成日期','会员姓名','手机号']
                let val = ['SHOPNAME','OTHERSHOPNAME','ADDMONEY','GIFTMONEY','RATEADDMONEY','BILLNO','date','VIPNAME','MOBILENO']
                let title = "跨店充值明细" + this.getNowDateTime();
                if (newParam.length == 0) {
                    this.$message({ message: "数据不能为空", type: "success" })
                } else {
                    this.export2Excel(head, val, newParam, title);
                }
            }
        },
        exportState(data) {
            let list = this.tableData
            let head = ['店铺','本店耗他店卡','他店耗本店卡','本店充值他店卡','他店充值本店卡','应收金额','应付金额','对账金额','对账比例','结算金额']
            let val = ["SHOPNAME", "SALEMONEY", "OTHERSALEMONEY", "ADDMONEY", "OTHERADDMONEY", "COLLECTMONEY", "PAYMONEY", "RECONCILLATIONMONEY", "RATE", "MONEY"];
            let title = "储值跨店表" + this.getNowDateTime();
            if (list.length == 0) {
                this.$message({ message: "数据不能为空", type: "success" })
            } else {
                this.export2Excel(head, val, list, title);
            }
        },
        getNewData(data) {
            this.curDate = data
            this.choseShopData()
        },
        choseShopData(){
            let sendData = {
                BeginDate: this.curDate.BeginDate,
                EndDate: this.curDate.EndDate,
                ShopId: this.ShopId
            }
            this.$store.dispatch('getCrossStoreData', sendData).then(()=>{
                this.loading = true
            })
        }
    },
    mounted(){
        let sendData = { ShopId: getHomeData().shop.SHOPID, BeginDate: this.getTimeStamp(), EndDate: new Date().getTime() }
        this.$store.dispatch('getCrossStoreData', sendData).then(()=>{
            this.loading = true
        })  
        if (this.shopList.length == 0) {
            this.$store.dispatch("getShopList", {});
        }

        this.ReconciliaRate = getUserInfo().CompanyConfig.RECONCILIARATE * 100
    }
};
</script>




