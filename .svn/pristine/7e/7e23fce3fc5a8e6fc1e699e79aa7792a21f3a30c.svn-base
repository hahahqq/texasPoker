<template>
    <el-container>
      <div class="content-new-fex">
    <div class="row-flex flex-start">
        <section
            class="bg-white marginLR-sm paddingTB-sm paddingLR-md full-width"
            v-loading="loading"
        >
            <filtePage @getNewData="getNewData" @exportState="exportState"></filtePage>
            <!-- page -->
            <div class="row-flex paddingTB-sm flex-items-center">
                <div class style="min-width:510px;">
                    <div
                        v-for="(item, i) in pageList"
                        :key="i"
                        v-if="i<6"
                        class="inline-block m-right-md marginTB-sm padding-sm border"
                        style="width:150px"
                    >
                        <span>{{item.label}}</span>
                        <el-button
                            type="text"
                            @click="getNewList(item.id,null)"
                            class="pull-right no-padding"
                        >详情</el-button>
                        <div class="text-left p-top-sm">
                            <span
                                v-text="dataData[item.value]?dataData[item.value]:0"
                                class="font-600"
                            ></span>
                        </div>
                    </div>
                </div>
                <div class="full-width relative">
                    <div
                        class="inline-block border-top border-right border-bottom paddingTB-lg paddingLR-md"
                    >
                        <span class="block paddingTB-sm"></span>
                    </div>
                    <div
                        class="inline-block padding-sm border translateY-center marginLR-md"
                        style="width:150px"
                    >
                        <div class="p-bottom-sm">{{pageList[6].label}}</div>
                        <div>
                            <span
                                v-text="dataData[pageList[6].value]?dataData[pageList[6].value]:0"
                                class="font-600 font-16"
                            ></span>
                        </div>
                    </div>
                </div>
            </div>
            <!-- table-->
            <el-table
                border
                :height="tablename"
                :data="paywayList"
                header-row-class-name="bg-theme2 text-white"
                class="full-width"
            >
                <el-table-column prop="PAYTYPENAME" label="支付方式" width="180"></el-table-column>
                <el-table-column label="金额">
                    <template slot-scope="props">
                        <span>&yen;{{props.row.MONEY}}</span>
                        <el-progress
                            :text-inside="true"
                            :stroke-width="18"
                            :percentage="props.row.FRATE>0?(props.row.FRATE<1?props.row.FRATE*100:100):0"
                            :color="getColor(props.row.FRATE*100)"
                        ></el-progress>
                    </template>
                </el-table-column>
                <el-table-column prop="FCOUNT" label="笔数"></el-table-column>
                <el-table-column label="占比">
                    <template
                        slot-scope="props"
                    >{{props.row.FRATE == 1 ? '100%' : parseInt(props.row.FRATE*100) + '%'}}</template>
                </el-table-column>
                <el-table-column label="更多" width="80">
                    <template slot-scope="props">
                        <el-button
                            type="text"
                            @click="getNewList(5,props.row)"
                            class="no-padding"
                        >详情</el-button>
                    </template>
                </el-table-column>
            </el-table>
        </section>

        <!-- list -->
        <el-dialog :title="title" :visible.sync="isShowList" width="90%" style="max-width:100%;">
            <listPage
                @closeModal="isShowList=false"
                :dataType="dataType"
            ></listPage>
        </el-dialog>
    </div>
    </div>
    </el-container>
</template>
<script>
import { mapState, mapGetters } from "vuex";
import MIXINS_REPORT from "@/mixins/report";
import MIXNINS_EXPORT from "@/mixins/exportData.js";
export default {
    mixins: [
        MIXINS_REPORT.SIDERBAR_MENU,
        MIXINS_REPORT.COMMOM_PAGE,
        MIXNINS_EXPORT.TOEXCEL,
        MIXNINS_EXPORT.TODATA
    ],
    data() {
        return {
            pageList: [
                {
                    label: "营业额",
                    value: "SaleMoney",
                    num: "SaleCount",
                    id: 1
                },
                { label: "充值", value: "AddMoney", num: "AddCount", id: 3 },
                { label: "还款", value: "PayOweMoney", id: 7 },
                {
                    label: "会员消费",
                    value: "SaleVipMoney",
                    num: "SaleVipCount",
                    id: 2
                },
                { label: "支出", value: "ExpMoney", num: "ExpCount", id: 4 },
                { label: "欠款", value: "OweMoney", id: 6 },
                { label: "收支结余", value: "GainMoney", id: null }
            ],
            paywayList: [], // 支付
            dataType:{},
            tablename:document.body.clientHeight-308,
        };
    },
    computed: {
        ...mapGetters({
            dataData: "surplusReportData",
            dataState: "surplusReportState",
            dataList: "surplusReportList",
            dataListState: "surplusReportListState",
            dataListArr: "surplusReportListARR",
            dataExportState: "saleMoneyExportState"
        })
    },
    watch: {
        dataState(data) {
            this.loading = false;
            if (data.success) {
                this.paywayList = [...this.dataData.PayList];
            }
        },
        dataExportState(data) {
            if (data.success) {
                // 销售查询导出
                this.exportList = [...data.data.List];
                if (this.exportList.length > 0) {
                    let list = [...this.exportList];
                    let head = [
                        "单号",
                        "日期",
                        "消费类型",
                        "门店",
                        "会员",
                        "详情",
                        "支付方式",
                        "消费金额",
                        "备注"
                    ];
                    let val = [
                        "BILLNO",
                        "DATESTR",
                        "BILLTYPENAME",
                        "SHOPNAME",
                        "VIPNAME",
                        "LONGGOODSNAME",
                        "PAYTYPENAME",
                        "PAYMONEY",
                        "REMARK"
                    ];
                    let title = "营业额明细" + this.getNowDateTime();

                    this.export2Excel(head, val, list, title);
                } else {
                    this.$message({
                        message: "数据不能为空",
                        type: "error"
                    });
                }
            } else {
                this.exportList = [];
                this.$message({
                    message: "数据有误，导出失败",
                    type: "error"
                });
            }
            this.loading = false;
        }
    },
    methods: {
        exportState(data) {
            if (data && data > 0) {
                // 营业额明细
                this.$store
                    .dispatch("getsaleMoneyReportData_Export", this.ruleFrom)
                    .then(() => {
                        this.loading = true;
                    });
                return;
            }
            // 收支结余
            var list = this.paywayList;
            for (var i in list) {
                list[i].FRATE =
                    list[i].FRATE == 1
                        ? "100%"
                        : parseInt(list[i].FRATE * 100) + "%";
            }
            var head = ["支付方式", "金额", "笔数", "占比"];
            var val = ["PAYTYPENAME", "MONEY", "FCOUNT", "FRATE"];
            var title = "收支结余表" + this.getNowDateTime();
            if (list.length == 0) {
                this.$message({
                    message: "数据不能为空",
                    type: "success"
                });
            } else {
                this.export2Excel(head, val, list, title);
            }
        },
        getNewData(data) {
            this.$store.dispatch("getsurplusReportData", data).then(() => {
                this.loading = true;
                this.ruleFrom = Object.assign({}, data);
            });
        },
        getNewList(index, item) {
            let sendData = {
                obj: { index: index, obj: "surplus" },
                data: Object.assign({}, this.ruleFrom)
            };
            this.ruleFrom2 = Object.assign({}, sendData);
            this.title = this.dataListArr[index].title;
            this.dataType = {'data':this.ruleFrom2,'state':true};
            if (item) {
                // 支付明细
                this.ruleFrom2.data.PayTypeId = item.PAYTYPEID;
                this.title += "：" + item.PAYTYPENAME;
            }
            this.$store.dispatch("clearsurplusReportList", index).then(() => {
                    this.$store.dispatch("getsurplusReportList", sendData);
                    this.loading = true;
            });
        },
        getColor: function(v) {
            if (v > 75) {
                return "#67c23a";
            } else if (v > 50) {
                return "rgba(142, 113, 199, 0.7)";
            } else if (v > 25) {
                return "#409eff";
            } else {
                return "#f56c6c";
            }
        }
    },
    // beforeCreate() {
    //   this.$store.dispatch("getsurplusReportData", {});
    // },
    created() {
        this.$store
            .dispatch("getsurplusReportData", {
                ShopId: this.theShopId,
                BeginDate: this.getTimeStamp(),
                EndDate: new Date().getTime()
            })
            .then(() => {
                this.loading = true;
                this.ruleFrom = {
                    ShopId: this.theShopId,
                    BeginDate: this.getTimeStamp(),
                    EndDate: new Date().getTime()
                };
            });
    },
    components: {
        listPage: () => import("@/components/reports/management/tableList")
    }
};
</script>

