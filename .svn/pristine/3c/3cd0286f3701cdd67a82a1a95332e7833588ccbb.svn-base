<template>
  <el-container>
    <input
      type="file"
      ref="upload"
      @change="readExcel"
      accept=".xls, .xlsx"
      class="outputlist_upload hide"
    />
    <el-header style="height: 50px">
      <headerPage></headerPage>
    </el-header>

    <el-container>
      <el-aside width="100px">
        <section style="min-width: 100px">
          <memberMenu :activePath="activePath" :routesList="routesList" :width="100"></memberMenu>
        </section>
      </el-aside>

      <el-container>
        <el-main>
          <div class="member-main-top">
            <div class="content-center">
              <div class="member-main-top-buttom">
                <div class="btn">
                  <div class="btm-list">
                    <el-button type="primary" size="small" @click="showAddNewChange()">
                      新增会员
                    </el-button>
                  </div>
                  <div class="btm-list">
                    <el-popover placement="bottom" width="250" trigger="click">
                      <el-button plain size="small" slot="reference">微信快速注册</el-button>
                      <div style="margin: 0 auto; width: 100%; text-align: center">
                        <span
                          class="full-width m-bottom-sm"
                          style="display: table; color: #868686; font-size: 10px"
                        >
                          客户扫一扫 , 即可注册并完善资料
                        </span>
                        <img id="codeImgID" :src="codeImg" width="160px" height="160px" />
                        <div style="font-size: 12px; color: #7188fd">
                          <el-button size="small" type="text" @click="downloadImg">
                            下载二维码
                          </el-button>
                        </div>
                      </div>
                    </el-popover>
                  </div>
                  <div class="btm-list">
                    <el-button plain size="small" @click="inportMerberData = true">
                      会员导入
                    </el-button>
                  </div>
                  <div class="btm-list">
                    <el-button
                      plain
                      size="small"
                      @click="ExportMemberData"
                      :loading="exportLoading"
                    >
                      会员导出
                    </el-button>
                  </div>
                </div>
                <div class="ipt">
                  <el-input
                    v-model="searchText"
                    placeholder="请输入会员姓名、卡号或手机号"
                    style="width: 52%"
                    size="small"
                  >
                    <template slot="append" @click="searchfun2(1)">
                      <span style="font-size: 12px">搜索</span>
                    </template>
                  </el-input>
                </div>
              </div>

              <div class="top-input">
                <div class="top-input-conts">
                  <div>
                    <span style="font-size: 12px">归属店铺&nbsp;&nbsp;&nbsp;</span>
                    <el-select
                      v-model="value2"
                      placeholder="请选择"
                      size="small"
                      style="width: 200px"
                      @change="selectShop"
                      clearable
                    >
                      <el-option
                        v-for="item in shopName"
                        :key="item.SHOPNAME"
                        :label="item.SHOPNAME"
                        :value="item.SHOPID"
                      ></el-option>
                    </el-select>
                  </div>

                  <div class="top-input-list">
                    <span style="font-size: 12px">销售顾问&nbsp;&nbsp;&nbsp;</span>
                    <el-select
                      v-model="value3"
                      placeholder="请选择"
                      size="small"
                      style="width: 200px"
                      @change="selectShop"
                      clearable
                    >
                      <el-option
                        v-for="item in disoptionsman"
                        :key="item.value"
                        :label="item.label"
                        :value="item.value"
                      ></el-option>
                    </el-select>
                  </div>
                </div>

                <div class="bottom">
                  <span @click="changeTaller">
                    <span style="font-size: 12px">更多筛选</span>
                    &nbsp;&nbsp;
                    <i :class="tallerShow == true ? 'el-icon-arrow-up' : 'el-icon-arrow-down'"></i>
                  </span>
                </div>
              </div>
            </div>

            <!-- 高级搜索 -->
            <transition name="fade">
              <div class="collaps-from" v-show="tallerShow" transiton="fade">
                <div>
                  <el-form label-width="100px">
                    <el-form-item label="会员标签:">
                      <ul class="memberType">
                        <li
                          v-for="(item, index) in datamemberLeveList"
                          :key="index"
                          @click="secltListCont(index, item)"
                          :class="item.isSelect == true ? 'memberType-secect' : ''"
                        >
                          {{ item.VIPFLAG }}
                        </li>
                      </ul>
                    </el-form-item>
                    <el-form-item label="销售顾问:">
                      <ul class="memberType">
                        <li
                          v-for="(item, index) in disoptionsman"
                          :key="index"
                          @click="secltListContType(index, item)"
                          :class="item.isSelect == true ? 'memberType-secect' : ''"
                        >
                          {{ item.label }}
                        </li>
                      </ul>
                    </el-form-item>
                    <el-form-item label="会员生日:">
                      <ul class="memberType">
                        <li
                          v-for="(item, index) in birthdayDate"
                          :key="index"
                          @click="secltListBirthday(index, item)"
                          :class="item.isSelect == true ? 'memberType-secect' : ''"
                        >
                          {{ item.name }}
                        </li>
                      </ul>
                    </el-form-item>
                    <el-form-item label="消费次数:">
                      <ul class="memberType">
                        <li
                          v-for="(item, index) in PayCount"
                          :key="index"
                          @click="secltListConsume(index, item)"
                          :class="item.isSelect == true ? 'memberType-secect' : ''"
                        >
                          {{ item.name }}
                        </li>
                      </ul>
                    </el-form-item>
                    <el-form-item label="流失客户:">
                      <ul class="memberType">
                        <li
                          v-for="(item, index) in memberWastage"
                          :key="index"
                          @click="secltListWastage(index, item)"
                          :class="item.isSelect == true ? 'memberType-secect' : ''"
                        >
                          {{ item.name }}
                        </li>
                      </ul>
                    </el-form-item>
                  </el-form>
                </div>
                <div style="text-align: center; margin: 0">
                  <el-button type="primary" size="mini" @click="screenChange" :loading="loading">
                    确定筛选
                  </el-button>
                  <el-button size="mini" type="info" @click="clearChange">清空筛选</el-button>
                </div>
              </div>
            </transition>

            <!-- 新增会员 -->
            <el-dialog
              v-if="showAddNew"
              title="新增会员"
              :visible.sync="showAddNew"
              width="850px"
              style="max-width: 100%"
            >
              <add-new-member
                @closeModal="showAddNew = false"
                @resetList="
                  showAddNew = false;
                  getNewData();
                "
              ></add-new-member>
            </el-dialog>

            <!-- 会员导入 -->
            <el-dialog title="会员导入" :visible.sync="inportMerberData" width="40%">
              <span class="full-width pull-left">
                上传文件
                <span v-if="tableUploadData.length == 0">
                  <el-button
                    class="m-left-sm"
                    size="small"
                    type="primary"
                    icon
                    for="input"
                    @click="$refs.upload.click()"
                  >
                    选择文件
                  </el-button>
                  <span class="m-left-sm text-86">未选择任何文件</span>
                </span>

                <span v-else class="text-primary m-left-sm">
                  共检索出 {{ tableUploadData.length }} 条会员数据
                </span>
              </span>

              <div class="full-width m-top-md m-bottom-md pull-left">
                <a
                  href="static/images/会员导入模板.xls"
                  style="display: table; color: #3278b3; float: left"
                >
                  模板下载
                </a>
                <span class="text-86">( 请按照模板中的要求整理会员信息 )</span>
              </div>

              <div class="text-right full-width">
                <el-button size="small" type="primary" @click="okUpload">确定</el-button>
                <el-button
                  size="small"
                  plain
                  @click="
                    inportMerberData = false;
                    tableUploadData = [];
                    importLoading = false;
                  "
                >
                  取消
                </el-button>
              </div>
            </el-dialog>
          </div>

          <div class="content-table" style="height: auto; padding-bottom: 10px">
            <div class="content-table-center">
              <el-table
                size="small"
                :data="pagelist"
                ref="Table"
                v-loading="loading"
                @selection-change="handleSelectionChange"
                style="width: 100%"
                :height="tableHeight"
                header-row-class-name="bg-F1F2F3"
              >
                <el-table-column type="selection" width="45" fixed="left"></el-table-column>
                <el-table-column prop="NAME" label="会员信息" width="160">
                  <template slot-scope="scope">
                    <img
                      :src="scope.row.IMAGEURL"
                      alt=""
                      style="
                        float: left;
                        border-radius: 8px;
                        width: 40px;
                        height: 40px;
                        margin-right: 8px;
                        margin-top: 4px
                      "
                    />
                    <span style="height: 40px; width: 102px">
                      <i
                        class="pull-left inline-block"
                        style="
                          color: #2589ff;
                          width: 92px;
                          overflow: hidden;
                          text-overflow: ellipsis;
                          white-space: nowrap;
                        "
                      >
                        <span style="cursor: pointer" @click="handleEdit(scope.$index, scope.row)">
                          {{ scope.row.NAME ? scope.row.NAME : " " }}
                        </span>
                        &nbsp;&nbsp;
                        <img
                          :src="
                            scope.row.SEX == 0
                              ? 'static/images/icon_man.png'
                              : 'static/images/icon_woman.png'
                          "
                          style="width: 13px; height: 13px; vertical-align: middle"
                        />
                      </i>
                      <i
                        class="pull-left inline-block"
                        style="
                          width: 92px;
                          overflow: hidden;
                          text-overflow: ellipsis;
                          white-space: nowrap;
                        "
                      >
                        {{ scope.row.MOBILENO }}
                      </i>
                    </span>
                  </template>
                </el-table-column>
                <el-table-column prop="CODE" label="卡号" align="center"></el-table-column>
                <el-table-column prop="SHOPNAME" label="归属店铺" align="center"></el-table-column>
                <el-table-column prop="LEVELNAME" label="会员等级" align="center"></el-table-column>
                <el-table-column
                  prop="VIPFLAG"
                  label="标签"
                  width="100"
                  align="center"
                ></el-table-column>
                <el-table-column label="生日时间" align="center">
                  <template slot-scope="scope">
                    <span v-if="scope.row.BIRTHDATE != 0 && scope.row.BIRTHDATE != undefined">
                      {{ new Date(scope.row.BIRTHDATE) | time }}
                    </span>
                    <span v-else>--</span>
                  </template>
                </el-table-column>

                <el-table-column prop="MONEY" label="储值积分" align="center"></el-table-column>
                <el-table-column prop="INTEGRAL" label="竞技积分" align="center"></el-table-column>
                <el-table-column prop="OWEMONEY" label="欠款" align="center"></el-table-column>
                <el-table-column label="操作" width="70" fixed="right" align="right">
                  <template slot-scope="scope">
                    <el-button
                      size="small"
                      type="text"
                      @click="handleEdit(scope.$index, scope.row)"
                      style="color: #2589ff"
                    >
                      详情
                    </el-button>
                  </template>
                </el-table-column>
              </el-table>
              <!-- 分页 -->
              <div v-show="pagelist.length > 0" class="m-top-sm clearfix elpagination overall-font">
                <div>
                  <el-row>
                    <el-col :span="8">
                      <el-button size="small" @click="delMember">删除会员</el-button>
                      <el-button size="small" @click="reportLossfun">挂失</el-button>
                      <!-- <el-button size="small">换卡</el-button> -->
                    </el-col>
                    <el-col :span="16">
                      <el-pagination
                        background
                        @size-change="handlePageChange"
                        @current-change="handlePageChange"
                        :current-page.sync="pagination.PN"
                        :pager-count="5"
                        :page-size="pagination.PageSize"
                        :page-sizes="[20]"
                        layout="total, sizes, prev, pager, next, jumper"
                        :total="pagination.TotalNumber"
                        class="text-right"
                      ></el-pagination>
                    </el-col>
                  </el-row>
                </div>
              </div>
            </div>
            <!-- item -->
            <div class="member-detailed">
              <el-dialog
                title="会员详情"
                :visible.sync="showItem"
                width="800px"
                style="max-width: 100%"
              >
                <item-page @closeModal="showItem = false" :pageState="showItem"></item-page>
              </el-dialog>
            </div>
          </div>
        </el-main>
      </el-container>
    </el-container>
  </el-container>
</template>
<script>
import { mapState, mapGetters } from "vuex";
import MIXNINS_EXPORT from "@/mixins/exportData.js";
let _ = require("lodash");
import MIXINS_MEMBER from "@/mixins/member";
import listPage from "./list.vue";
import gradePage from "../selected/level.vue";
import recordPage from "./record.vue";
import promotionPage from "./promotion.vue";
import QRCode from "qrcode";
import { getHomeData } from "@/api/index";
export default {
  mixins: [MIXINS_MEMBER.MEMBER_MENU, MIXNINS_EXPORT.TOEXCEL, MIXNINS_EXPORT.TODATA],
  data() {
    return {
      activeName: "first",
      height: window.innerHeight,
      pagelist: [],
      selectlist: [],
      selectlistBirthdayDate: [],
      secltListConsumeDate: [],
      secltListWastageDate: [],
      selectlistType: [],
      tallerShow: false,
      value2: "",
      value3: "",
      activeNames: 1,
      tableUploadData: [],
      tableUploadDataCard: [],
      disoptionsman: [],
      birthdayDate: [
        { id: "-1", name: "全部", isSelect: true },
        { id: "1", name: "今天", isSelect: false },
        { id: "7", name: "明天", isSelect: false },
        { id: "30", name: "近30天", isSelect: false }
      ],
      PayCount: [
        { id: "-1", name: "全部", isSelect: true },
        { id: "0", name: "有过消费", isSelect: false },
        { id: "10", name: "消费前10", isSelect: false },
        { id: "50", name: "消费前50", isSelect: false },
        { id: "100", name: "消费前100", isSelect: false }
      ],
      memberWastage: [
        { id: "-1", name: "全部", isSelect: true },
        { id: "30", name: "近30天", isSelect: false },
        { id: "90", name: "近3个月", isSelect: false },
        { id: "180", name: "近6个月", isSelect: false }
      ],
      datamemberLeveList: [],
      shopName: [],
      inportMerberData: false,
      inportMerberDataCard: false,
      value1: "",
      options1: "",
      loading: false,
      pagination: {
        TotalNumber: 0,
        PageNumber: 0,
        PageSize: 20,
        PN: 0
      },
      searchText: "",
      isFilter: false,
      pageData: {
        PN: 1,
        Filter: "",
        Status: -1,
        LevelName: "",
        ShopId: "",
        SaleEmpId: "",
        VipFlag: "",
        SaleEmpId: "",
        birthday: "",
        PayCount: "",
        LossVip: "",
        Name: ""
      },
      multipleSelection: [],
      reportLoss: { loading: false, num: 0 },
      showAddNew: false,
      showItem: false,
      exportLoading: false,
      tableHeight: document.body.clientHeight - 276,
      codeImg: "",
      Membercode: "",
      vipID: ""
    };
  },
  computed: {
    ...mapGetters({
      dataList: "memberList",
      dataListState: "memberListState",
      dataState: "memberState",
      reportLossState: "reportLossState",
      exportMemberState: "exportMemberState",
      memberLevelList: "memberLevelList",
      flagList: "memberFlagList",
      importState: "importMemberState",
      memberItemInfo: "memberItemState",
      shopList: "shopList",
      employeeList: "employeeList",
      memberShop: "memberShop",
      memberFlagList: "memberFlagList",
      delMemberState: "delMember",
      memberCodeState: "memberCodeState",
      gparameterstate: "gparameterstate",
      importMemberStateCard: "importMemberStateCard"
    })
  },
  watch: {
    memberItemInfo(data) {
      this.$router.push({
        name: "memberItem",
        query: { ID: this.vipID }
      });
    },
    importMemberStateCard(data) {
      if (data.success) {
        this.$message({
          message: "操作成功",
          type: "success"
        });
        this.inportMerberDataCard = false;
      } else {
        this.$message({ message: data.message, type: "error" });
        this.inportMerberDataCard = false;
      }
    },
    gparameterstate(data) {
      if (data.success && Object.keys(data.data.CompanyConfig).length > 0) {
        let code = data.data.CompanyConfig.AUTOGENVIPCODE;
        this.Membercode = code;
      }
    },
    memberCodeState(data) {
      QRCode.toDataURL(data.BarCode)
        .then((url) => {
          this.codeImg = url;
        })
        .catch((err) => {
          console.error(err);
        });
    },
    searchText() {
      console.log("8888888946+5555656566565");
      this.searchfun();
    },
    memberFlagList(data) {
      let msl = [];
      msl = data;
      this.datamemberLeveList = [];
      msl.forEach((item) => {
        this.$set(item, "isSelect", false);
        this.datamemberLeveList.push(item);
      });
      this.datamemberLeveList.unshift({
        VIPFLAG: "全部",
        isSelect: true
      });
    },
    memberShop(data) {
      console.log(data);
      this.shopName = data;
    },
    employeeList(data) {
      this.disoptionsman = [];
      let employeemen = data;
      for (var i in employeemen) {
        let Obj = {
          value: employeemen[i].ID,
          label: employeemen[i].NAME,
          isSelect: false
        };
        this.disoptionsman.push(Obj);
      }
      this.disoptionsman.unshift({
        label: "全部",
        isSelect: true
      });
    },
    dataListState(data) {
      this.loading = false;
      this.isFilter = false;
      this.pagelist = [...this.dataList];
      if (data.success) {
        this.pagination = {
          TotalNumber: data.paying.TotalNumber,
          PageNumber: data.paying.PageNumber,
          PageSize: data.paying.PageSize,
          PN: data.paying.PN
        };
      }
    },
    searchText() {
      this.searchfun();
    },
    reportLossState(data) {
      if (data.success) {
        this.reportLoss.num++;
        if (this.multipleSelection.length == this.reportLoss.num) {
          this.$message({
            message: "操作成功，已选会员已挂失/取消挂失",
            type: "success"
          });
          this.reportLoss.loading = false;
          this.getNewData();
        }
      } else {
        this.$message({ message: data.message, type: "error" });
      }
    },
    delMemberState(data) {
      if (data.success) {
        this.$message({
          message: "操作成功",
          type: "success"
        });
        this.getNewData();
      } else {
        this.$message({ message: data.message, type: "error" });
      }
    },
    exportMemberState(data) {
      this.exportLoading = false;
      this.exportExcel(data.data.List);
    },
    dataState(data) {
      if (data.success && !this.loading && !this.showItem) {
        this.showItem = true;
      }
      if (data.success && data.data.obj && this.showItem) {
        for (let i = 0; i < this.pagelist.length; i++) {
          if (this.pagelist[i].ID == this.memberItemInfo.ID) {
            this.pagelist[i] = Object.assign({}, this.pagelist[i], this.memberItemInfo);
            break;
          }
        }
        this.$store.state.member.memberList = [...this.pagelist];
        this.pagelist = [...this.pagelist];
      }
    },
    outputsState(data) {
      // 导入 mixins
      if (data.state) {
        this.importExcel(this.outputs);
      } else {
        this.$message({ showClose: true, message: "数据为空", type: "error" });
      }
    },
    importState(data) {
      if (data.success) {
        this.$message("导入成功");
        this.getNewData();
      } else {
        this.$message(data.message);
      }
    }
  },
  methods: {
    showAddNewChange() {
      this.showAddNew = true;
      if (this.Membercode == true) {
        this.$store.dispatch("getAutoVipCode").then(() => {});
      }
    },
    downloadImg() {
      var a = document.createElement("a");
      var event = new MouseEvent("click");
      a.download = "店铺二维码";
      a.href = this.codeImg;
      a.dispatchEvent(event);
    },
    secltListCont(e, items) {
      if (e == 0) {
        this.datamemberLeveList[e].isSelect = !this.datamemberLeveList[e].isSelect;
        if (this.datamemberLeveList[e].isSelect == true) {
          for (var i in this.datamemberLeveList) {
            if (i > 0) {
              this.datamemberLeveList[i].isSelect = false;
              this.selectlist = [];
            }
          }
        }
      } else if (e > 0) {
        this.datamemberLeveList[0].isSelect = false;
        this.datamemberLeveList[e].isSelect = !this.datamemberLeveList[e].isSelect;
        this.selectlist = this.datamemberLeveList.filter((item) => {
          return item.isSelect != false;
        });
      }
      console.log(this.selectlist);
    },
    secltListContType(e, items) {
      if (e == 0) {
        this.disoptionsman[e].isSelect = !this.disoptionsman[e].isSelect;
        if (this.disoptionsman[e].isSelect == true) {
          for (var i in this.disoptionsman) {
            if (i > 0) {
              this.disoptionsman[i].isSelect = false;
              this.selectlistType = [];
            }
          }
        }
      } else if (e > 0) {
        this.disoptionsman[0].isSelect = false;
        this.disoptionsman[e].isSelect = !this.disoptionsman[e].isSelect;
        this.selectlistType = this.disoptionsman.filter((item) => {
          return item.isSelect != false;
        });
      }
      console.log(this.selectlistType);
    },
    secltListBirthday(e, items) {
      for (var i in this.birthdayDate) {
        if (e == i) {
          this.birthdayDate[i].isSelect = !this.birthdayDate[i].isSelect;
          if (this.birthdayDate[i].isSelect == true) {
            this.selectlistBirthdayDate = items;
          }
        } else {
          this.birthdayDate[i].isSelect = false;
        }
      }
      console.log(this.selectlistBirthdayDate.id);
    },
    secltListConsume(e, items) {
      for (var i in this.PayCount) {
        if (e == i) {
          this.PayCount[i].isSelect = !this.PayCount[i].isSelect;
          if (this.PayCount[i].isSelect == true) {
            this.secltListConsumeDate = items;
          }
        } else {
          this.PayCount[i].isSelect = false;
        }
      }
      console.log(this.secltListConsumeDate.id);
    },
    secltListWastage(e, items) {
      for (var i in this.memberWastage) {
        if (e == i) {
          this.memberWastage[i].isSelect = !this.memberWastage[i].isSelect;
          if (this.memberWastage[i].isSelect == true) {
            this.secltListWastageDate = items;
          }
        } else {
          this.memberWastage[i].isSelect = false;
        }
      }
      console.log(this.secltListWastageDate.id);
    },

    //确定筛选
    screenChange() {
      let selectlistId = [];
      for (var i in this.selectlist) {
        selectlistId.push(this.selectlist[i].VIPFLAG);
      }
      //把数组变为字符串
      let permission = selectlistId.join(",");

      //在把字符串加单引号
      var str1 = "";
      var arr = [];
      arr = permission.split(",");
      for (var i = 0; i < arr.length; i++) {
        str1 += "'" + arr[i] + "',";
      }
      str1 = str1.substring(0, str1.length - 1);

      this.pageData.VipFlag = str1;
      let selectlistTypeId = [];
      for (var i in this.selectlistType) {
        selectlistTypeId.push(this.selectlistType[i].value);
      }
      let permissions = selectlistTypeId.join(",");
      //在把字符串加单引号
      var str2 = "";
      var arrs = [];
      arrs = permissions.split(",");
      for (var i = 0; i < arrs.length; i++) {
        str2 += "'" + arrs[i] + "',";
      }
      str2 = str2.substring(0, str2.length - 1);
      this.pageData.SaleEmpId = str2;
      this.pageData.birthday = this.selectlistBirthdayDate.id;
      this.pageData.PayCount = this.secltListConsumeDate.id;
      this.pageData.LossVip = this.secltListWastageDate.id;
      this.getNewData();
      this.tallerShow = false;
    },
    //清空高级筛选
    clearChange() {
      this.tallerShow = false;
      for (var i in this.datamemberLeveList) {
        if (i > 0) {
          this.datamemberLeveList[i].isSelect = false;
        } else {
          this.datamemberLeveList[i].isSelect = true;
        }
      }
      for (var j in this.disoptionsman) {
        if (j > 0) {
          this.disoptionsman[j].isSelect = false;
        } else {
          this.disoptionsman[j].isSelect = true;
        }
      }
      for (var t in this.birthdayDate) {
        if (t == 0) {
          this.birthdayDate[t].isSelect = true;
        } else {
          this.birthdayDate[t].isSelect = false;
        }
      }
      for (var g in this.PayCount) {
        if (g == 0) {
          this.PayCount[g].isSelect = true;
        } else {
          this.PayCount[g].isSelect = false;
        }
      }
      for (var y in this.birthdayDate) {
        if (y == 0) {
          this.memberWastage[y].isSelect = true;
        } else {
          this.memberWastage[y].isSelect = false;
        }
      }
      (this.pageData = {
        PN: 1,
        Filter: "",
        Status: -1,
        LevelName: "",
        ShopId: "",
        SaleEmpId: "",
        VipFlag: "",
        SaleEmpId: "",
        birthday: "",
        PayCount: "",
        LossVip: "",
        Name: ""
      }),
        this.getNewData();
    },
    changeTaller() {
      this.tallerShow = !this.tallerShow;
    },
    //选择会员等级
    selectMember(e) {
      console.log(e);
    },
    //选择门店
    selectShop() {
      this.pageData = {
        PN: 1,
        Filter: "",
        Status: -1,
        LevelName: "",
        ShopId: this.value2,
        SaleEmpId: "'" + this.value3 + "'",
        VipFlag: "",
        birthday: "",
        PayCount: "",
        LossVip: ""
      };
      this.getNewData();
    },
    handleDel(row) {
      console.log(row);
    },
    formatSex: function (row, column) {
      //性别显示转换
      return row.SEX == 0 ? "男" : row.SEX == 1 ? "女" : "未知";
    },
    formatStatus: function (row, column) {
      //-1=全部,0=正常，2=挂失
      return row.STATUS == 0 ? "正常" : row.STATUS == 2 ? "挂失" : "未知";
    },
    getNewData() {
      this.$store.dispatch("getMemberList", this.pageData).then(() => {
        this.loading = true;
      });
    },
    //单选会员操作
    handleSelectionChange(val) {
      if (val.length > 1) {
        this.$refs.Table.clearSelection();
        this.$refs.Table.toggleRowSelection(val.pop());
      } else {
        this.multipleSelection = val;
      }
    },
    delMember() {
      if (this.multipleSelection.length == 0) {
        this.$message("请选择会员");
        return;
      }
      let name, ID;
      console.log("删除会员");
      if (this.multipleSelection.length > 0) {
        name = this.multipleSelection[0].NAME;
        ID = this.multipleSelection[0].ID;
        console.log(ID);
      }
      this.$confirm("确认删除会员 【" + name + " 】?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      })
        .then(() => {
          this.$store.dispatch("getMemberDel", ID);
        })
        .catch(() => {});
    },
    currentChange(currentRow, oldCurrentRow) {
      this.$refs.Table.toggleRowSelection(currentRow);
    },
    handleEdit(idx, item) {
      this.vipID = item.ID;

      this.$store.dispatch("getMemberItem2", { ID: item.ID });
    },
    handlePageChange: function (currentPage) {
      if (this.pageData.PN == currentPage || this.loading) {
        return;
      }
      this.pageData.PN = parseInt(currentPage);
      this.getNewData();
    },
    searchfun: _.debounce(function () {
      this.searchfun2(0);
    }, 1000),
    searchfun2(type) {
      if (type == 1 && !this.searchText) {
        return;
      }
      this.pageData.Name = this.searchText;
      this.pageData.PN = 1;
      this.getNewData();
    },
    reportLossfun() {
      if (this.multipleSelection.length == 0) {
        this.$message({
          message: "请选择会员",
          type: "warning"
        });
        return;
      }
      let name, ID;
      console.log("删除会员");
      if (this.multipleSelection.length > 0) {
        name = this.multipleSelection[0].NAME;
        ID = this.multipleSelection[0].ID;
        console.log(ID);
      }
      this.reportLoss.num = 0;
      this.$confirm("您确认挂失/取消挂失已选会员?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      })
        .then(() => {
          // for (let i = 0; i < this.multipleSelection.length; i++) {
          //     let allsetdate = {
          //         id: this.multipleSelection[i].ID,
          //         Type: this.multipleSelection[i].STATUS == 0 ? 0 : 1
          //     };
          this.$store.dispatch("setReportLoss", ID);
          // }
        })
        .catch(() => {});
    },
    dealStringnull(str) {
      if (str == undefined) {
        return "";
      } else {
        return str.toString().replace(/\s*/g, "");
      }
    },

    ExportMemberData() {
      console.log("this.multipleSelection");
      console.log(this.multipleSelection);
      // 获取导出数据
      if (this.multipleSelection.length > 0) {
        this.exportExcel(this.multipleSelection);
        return;
      }
      this.$store
        .dispatch("getExportMemberData", {
          Name: this.searchText,
          VipFlag: this.pageData.VipFlag,
          LevelName: this.pageData.LevelName
        })
        .then(() => {
          this.exportLoading = true;
        });
    },
    exportExcel(arr) {
      console.log("会员导出来的数据发搜到福佛的算法", arr);
      // 导出到excel
      var list = [...arr];
      for (var i = 0; i < list.length; i++) {
        list[i].SEX = this.formatSex(list[i]);
        list[i].STATUS = this.formatStatus(list[i]);
        list[i].CREATEDATE = this.filterTime(new Date(list[i].CREATEDATE));
        list[i].INVALIDDATE = this.filterTime(new Date(list[i].INVALIDDATE));
        list[i].LASTTIME = this.filterTime(new Date(list[i].LASTTIME));
        list[i].BIRTHDATE =
          list[i].BIRTHDATE > 0 && list[i].BIRTHDATE
            ? this.filterTime(new Date(list[i].BIRTHDATE))
            : "";
      }
      var head = [
        "名称",
        "卡号",
        "性别",
        "生日",
        "手机号",
        "余额",
        "等级",
        "标签",
        "积分",
        "地址",
        "店铺",
        "创建日期",
        // "有效日期",
        "最后登录日期",
        "状态",
        "备注"
      ];
      var val = [
        "NAME",
        "CODE",
        "SEX",
        "BIRTHDATE",
        "MOBILENO",
        "MONEY",
        "LEVELNAME",
        "VIPFLAG",
        "INTEGRAL",
        "ADDRESS",
        "SHOPNAME",
        "CREATEDATE",
        // "INVALIDDATE",
        "LASTTIME",
        "STATUS",
        "REMARK"
      ];
      var title = "会员导出" + this.getNowDateTime();
      this.export2Excel(head, val, list, title);
    },

    importExcel(arr) {
      console.log("会员导入数据", arr);
      let newData = [];
      // 导入数据
      if (this.inportMerberData == true) {
        let that = this;
        for (let i = 1; i < arr.length; i++) {
          let strCode;
          for (var index in arr[i]) {
            let strlen = index.replace(/\s*/g, "").length;
            if (strlen > 40) {
              strCode = arr[i][index];
            }
          }
          let returnBirthDate;
          if (arr[i].__EMPTY_3 == undefined) {
            returnBirthDate = 0;
          } else {
            returnBirthDate = new Date(
              arr[i].__EMPTY_3.replace(/\s*/g, "").split(".").join("-")
            ).getTime();
          }
          let item = {
            Code: strCode.toString().replace(/\s*/g, ""),
            Name: that.dealStringnull(arr[i].__EMPTY),
            Sex: that.dealStringnull(arr[i].__EMPTY_1),
            MobileNo: arr[i].__EMPTY_2 == undefined ? "" : Number(arr[i].__EMPTY_2),
            BirthDate: returnBirthDate,
            DiscountTypeName: that.dealStringnull(arr[i].__EMPTY_4),
            VipFlag: that.dealStringnull(arr[i].__EMPTY_5),
            QQ: that.dealStringnull(arr[i].__EMPTY_6),
            Wechat: that.dealStringnull(arr[i].__EMPTY_7),
            DepositMoney: arr[i].__EMPTY_8 == undefined ? "" : arr[i].__EMPTY_8,
            Address: that.dealStringnull(arr[i].__EMPTY_9),
            Remark: that.dealStringnull(arr[i].__EMPTY_10),
            Money: arr[i].__EMPTY_11 == undefined ? "" : arr[i].__EMPTY_11,
            Integral: arr[i].__EMPTY_12 == undefined ? "" : arr[i].__EMPTY_12
          };
          newData.push(item);
        }
        this.tableUploadData = newData;
      }
    },
    okUpload() {
      this.$store.dispatch("getImportMemberData", this.tableUploadData);
    }
  },
  mounted() {
    this.$store.dispatch("getparameterstate");
    this.pagination = {
      TotalNumber: this.dataListState.paying.TotalNumber,
      PageNumber: this.dataListState.paying.PageNumber,
      PageSize: this.dataListState.paying.PageSize,
      PN: this.dataListState.paying.PN
    };
    this.pagelist = [...this.dataList];
    if (this.shopList.length == 0) {
      this.$store.dispatch("getShopList", {});
    }
    this.$store.dispatch("getEmployeeList", { ShopId: getHomeData().shop.ID });
    this.$store.dispatch("getShopName", {});
    this.$store.dispatch("getMemberLevel");
    this.$store.dispatch("getMemberFlag");
  },
  components: {
    addNewMember: () => import("@/components/member/add"),
    itemPage: () => import("./item"),
    headerPage: () => import("@/components/header")
  },
  beforeCreate() {
    let list = this.$store.state.member.memberList;
    let list2 = this.$store.state.member.memberLevelList;
    let list3 = this.$store.state.member.memberFlagList;
    //   if (list.length == 0) {
    this.$store.dispatch("getMemberList", { PN: 1 }).then(() => {
      this.loading = true;
    });
    //   }
    this.$store.dispatch("getMemberCode", {});
    if (list2.length == 0) {
      this.$store.dispatch("getMemberLevel");
    }
    if (list3.length == 0) {
      this.$store.dispatch("getMemberFlag");
    }
  }
};
</script>
<style scoped>
.el-container {
  background: #fff;
}
.member-header {
  display: flex;
  align-items: center;
  height: 50px;
}
.center-title {
  width: 100px;
  text-align: center;
  height: 50px;
  line-height: 50px;
  border: solid 1px #d7d7d7;
}
.center-cont {
  width: 100px;
  text-align: center;
  height: 50px;
  line-height: 50px;
}
.el-header {
  padding: 0 !important;
}
.shop {
  display: flex;
  align-items: center;
  height: 50px;
  position: relative;
}
.shop .name {
  position: absolute;
  right: 50px;
  height: 50px;
  line-height: 50px;
  width: 150px;
  text-align: center;
  top: 0;
  /* background: rebeccapurple; */
}
.el-header,
.el-footer {
  background-color: #fff;
  color: #333;
}

.el-aside {
  background-color: #d3dce6;
  color: #333;
  text-align: center;
  line-height: 200px;
  border-right: solid 1px #f366d7 !important;
}
.member-main-top {
  background: #fff;
}
.member-main-table {
  margin-top: 10px;
  /* width: 99%;
    margin-left: 0.5%;
    margin-right: 0.5%; */
  height: 550px;
  width: 100%;
  background: #fff;
}
.el-main {
  padding: 10px !important;
}
.member-center {
  width: 96%;
  margin-left: 2%;
  margin-right: 2%;
}
.member-main-top-buttom {
  /* margin-top: 5px; */
  display: flex;
  height: 60px;
  width: 100%;
  align-items: center;
  /* margin-left: 28px; */
}
.member-main-top-buttom .btn {
  width: 50%;
  display: flex;
  align-items: center;
  padding-top: 7px;
}
.member-main-top-buttom .ipt {
  width: 50%;
  text-align: right;
  padding-top: 7px;
}
.btm-list {
  margin-right: 25px;
}
.member-main-top-type {
  width: 100%;
  /* margin-left: 28px; */
}
.top-input-conts {
  display: flex;
  width: 60%;
  padding-bottom: 7px;
}
.top-input {
  display: flex;
  align-items: center;
  /* padding-top: 10px; */
  width: 100%;
  height: 60px;
  /* margin-left: 28px; */
}
.top-input .bottom {
  text-align: right;
  color: #409eff;
  width: 40%;
  padding-bottom: 7px;
}
.top-input-list {
  margin-left: 30px;
}
.collaps-from {
  width: 100%;
  height: 500px;
  margin-top: 10px;
}
.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.2s;
}
.fade-enter,
.fade-leave-active {
  opacity: 0;
}
.memberType li {
  float: left;
  margin-right: 20px;
  width: 80px;
  text-align: center;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  margin-top: 5px;
  border: solid 1px #e5e5e5;
  font-size: 12px;
  line-height: 28px;
  cursor: pointer;
}
.memberType-secect {
  background: #3399ff;
  color: #fff;
}
input::-webkit-input-placeholder {
  color: #c0c4cc;
  font-size: 12px;
}
.content-table-center >>> thead .el-table-column--selection .cell {
  /* display: none!important; */
}
.member-detailed >>> .el-dialog__body {
  padding: 0px 20px 30px 20px !important;
}
</style>

