<template>
  <div class="shop-list">
    <div class="content-eighty" style="height: auto; padding-top: 0">
      <div class="content-center">
        <div class="shop-bottom">
          <el-button size="small" type="primary" @click="handleDeal({})">新增店铺</el-button>
          <div class="seach-input">
            <el-input
              size="small"
              placeholder="请输入内容"
              v-model="input2"
              @keyup.enter.native="getNewData"
            >
              <el-button slot="append" type="default" @click="getNewData()">搜索</el-button>
            </el-input>
          </div>
        </div>
      </div>
    </div>
    <!--列表-->
    <div class="content-table m-top-sm">
      <el-table
        :data="pagelist"
        v-loading="loading"
        :height="clientHeight"
        size="small"
        header-row-class-name="bg-theme2 text-white"
      >
        <el-table-column type="index" label="序号" align="center" width="80"></el-table-column>
        <el-table-column prop="SHOPNAME" label="店铺名称"></el-table-column>
        <el-table-column prop="MANAGER" label="联系人" align="center"></el-table-column>
        <el-table-column prop="PHONENO" label="联系电话" align="center"></el-table-column>
        <el-table-column prop="ADDRESS" label="地址"></el-table-column>
        <el-table-column label="到期时间" align="center">
          <template slot-scope="scope">
            <span>{{ new Date(scope.row.INVALIDDATE) | time }}</span>
          </template>
        </el-table-column>
        <el-table-column label="操作" align="right">
          <template slot-scope="scope">
            <el-button type="text" size="small" @click="handleDeal(scope.row)" icon="el-icon-edit">
              编辑
            </el-button>
            <el-button
              size="small"
              type="text"
              v-if="!scope.row.ISINIT"
              @click="handleDel(scope.$index, scope.row)"
              icon="el-icon-delete"
            >
              删除
            </el-button>
          </template>
        </el-table-column>
      </el-table>
    </div>

    <!-- deal -->
    <el-dialog
      :title="dealType == 'add' ? '新增店铺' : '编辑店铺'"
      :visible.sync="dialogVisible"
      width="700px"
    >
      <editShopPage
        @closeModal="dialogVisible = false"
        @resetList="
          dialogVisible = false;
          getNewData();
        "
        :propsData="{ state: dialogVisible }"
      ></editShopPage>
    </el-dialog>
  </div>
</template>
<script>
import { mapState, mapGetters } from "vuex";
export default {
  data() {
    return {
      pagelist: [],
      loading: false,
      dialogVisible: false,
      dealType: "add",
      input2: "",
      clientHeight: document.body.clientHeight - 160
    };
  },
  computed: {
    ...mapGetters({
      dataList: "shopList",
      dataListState: "shopListState",
      dataState: "shopState",
      delShopState: "delShopState"
    })
  },
  watch: {
    dataListState(data) {
      this.loading = false;
      if (data.success) {
        this.pagelist = [...this.dataList];
      }
    },
    dealState(data) {
      if (data.success) {
        this.getNewData();
      }
    },
    delShopState(data) {
      if (data.success) {
        this.getNewData();
      } else {
        this.$message({ message: data.message, type: "error" });
      }
    }
  },
  methods: {
    getNewData() {
      this.$store.dispatch("getShopList", { Filterstr: this.input2 }).then(() => {
        this.loading = true;
      });
    },
    handleDeal(item) {
      this.$store.dispatch("selectingShop", item).then(() => {
        this.dialogVisible = true;
        this.dealType = Object.keys(item).length > 0 ? "edit" : "add";
      });
    },
    handleDel(index, item) {
      console.log(item);
      this.$confirm("此操作将永久删除, 是否继续?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      })
        .then(() => {
          this.$store.dispatch("delShopItem", { index: index, data: item }).then(() => {
            this.loading = false;
            this.dealType = "del";
          });
        })
        .catch(() => {});
    }
  },
  components: {
    editShopPage: () => import("@/components/setup/editShop")
  },
  mounted() {
    this.getNewData();
  }
};
</script>
<style scoped>
.shop-list {
  width: 100%;
  position: relative;
}
.shop-bottom {
  display: flex;
  align-items: center;
  height: 80px;
  background: #fff;
}
.seach-input {
  position: absolute;
  right: 30px;
}
.shop-table {
  margin-top: 20px;
  background: #fff;
}
</style>
