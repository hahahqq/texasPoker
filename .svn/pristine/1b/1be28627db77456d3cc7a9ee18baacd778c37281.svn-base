<template>
<el-container>
  <el-container>
    <el-container>

      <div class="content-new-fex">
        <div class="content-eighty">
            <div class="content-center">
             <filtePage @getNewData="getNewData" :isAll="true"></filtePage>
           </div>
           <!-- <div><el-button @click="ExportReportData">导出</el-button></div> -->
        </div>
        <div class="content-table4">
          <div class="content-table-center">
              <table class='tableStock' border='0' cellspacing='0' cellpadding='10' width='100%' v-loading="loading" element-loading-text="拼命加载中">
                  <thead>
                    <tr>
                        <th align='center' style='width:200px'>营业类型</th>
                        <th align='center' style='width:300px'>概况</th>
                        <th align='center' style='width:140px' v-for="(items,index) in nameList" :key="index">{{items}}</th>
                        <th align='center' style="width:50px">操作</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr v-for='(item, index) in  tableDatas' :key='index'>
                        <td align='center' style='padding:0 4px;width:200px'>{{item.date}}</td>
                        <td align='center' style='padding:0 4px; width:300px'>{{item.name}}</td>
                        <td align='center' style='padding:0 4px; width:70px' v-for="(items,i) in item.moneyList" :key="i" >{{items}}</td>
                        <td align='center' style="color:#3399FF" class="tip"
                        v-if="item.date !='总计' && item.date !='营业实收'" @click="isIndexSix=false;getNewList(item.id ,item.number)">详细</td>
                    </tr>
                  </tbody>
              </table>
            </div>
        </div>
        <el-dialog :title="title"
          :visible.sync="isShowList" width="90%" top="6%" style="max-width:100%;"
        >
          <listPage
            v-if="isShowList"
            @closeModal="isShowList=false"
            @resetModel="getNewList2"
            :dataType="{'data':ruleFrom2,'state':isShowList}"
          >
            <slot v-if="this.ruleFrom2.obj.index==6">
              <el-date-picker
                v-model="dateBE"
                type="daterange"
                value-format="timestamp"
                range-separator="至"
                start-placeholder="开始日期"
                end-placeholder="结束日期"
                class
              ></el-date-picker>
              <el-input
                type="default"
                v-model.trim="searchText"
                placeholder="会员手机号/卡号/姓名"
                class="m-bottom-sm"
                style="width: 250px;"
              >
                <el-button
                  slot="append"
                  type="default"
                  @click="isIndexSix=true;getNewList(6)"
                >查询</el-button>
              </el-input>
              <el-dropdown @command="shopCheckfun" class="m-left-sm pull-right">
                <el-button type="primary" size="small" plain>
                  <span v-text="shopCheckText?shopCheckText:'请选择店铺'"></span>
                  <i class="el-icon-arrow-down el-icon--right"></i>
                </el-button>
                <el-dropdown-menu slot="dropdown">
                  <el-dropdown-item :command="-1">全部</el-dropdown-item>
                  <el-dropdown-item v-for="(item,i) in shopList" :key="i" :command="i">{{item.NAME}}</el-dropdown-item>
                </el-dropdown-menu>
              </el-dropdown>
            </slot>
          </listPage>
        </el-dialog> 
      </div>
    </el-container>
  </el-container>
</el-container>
</template>
<script>
import { mapState, mapGetters } from "vuex";
import MIXINS_REPORT from "@/mixins/report";
import { getHomeData,getUserInfo } from '@/api/index'
import MIXINS_CLEAR from "@/mixins/clearAllData";
import MIXNINS_EXPORT from "@/mixins/exportData.js";
export default {
  mixins: [MIXINS_REPORT.SIDERBAR_MENU, MIXINS_REPORT.COMMOM_PAGE,MIXINS_CLEAR.LOGOUT,MIXNINS_EXPORT.TOEXCEL, MIXNINS_EXPORT.TODATA],
  data() {
    return {
      current: 0,
      businessList:[{id:'001',name:"营业概况"},{id:'002',name:"收支结余"},{id:'003',name:"收银对账"}],
      shopInfo: getHomeData().shop,
      isShowShop:false,
      theshopList: [],
      activePath: "",
      tableHeight: document.body.clientHeight ,
      pageList: [
        {
          title: "充值",
          totalMoney: 0,
          children: [
            { label: "售卡金额", value: "RegVipMoney", id: 1 },
            { label: "储值充值", value: "AddMoney", id: 2,number:601050201 },
            { label: "计次充值", value: "AddCountMoney", id: 3 },
            { label: "套餐充值", value: "AddPackMoney", id: 4,number:601050107 }
          ]
        },
        {
          title: "消费",
          totalMoney: 0,
          children: [
            { label: "快速消费", value: "QuickSaleMoney", id: 5 },
            { label: "商品消费", value: "GoodsSaleMoney", id: 6 },
            { label: "计次消费", value: "CountSaleQty", id: 7 },
            { label: "积分兑换", value: "ExchangeCount", id: 8,number:601050206 },
            { label: "房台消费", value: "RoomSaleMoney", id:12 }
          ]
        },
        {
          title: "其它",
          totalMoney: 0,
          children: [
            { label: "支出统计", value: "ChargesMoney", id: 9 },
            { label: "新增会员", value: "NewVipQty", id: 10,number:601050106 },
            { label: "商品库存", value: "StockQty", id: 11 ,number:601050101}
          ]
        }
      ],
      moneyName:[{id:"001",name:"小计"},{id:"002",name:"现金"},{id:"003",name:"扫码"}],
      nameList:[],
      searchText: "",
      dateBE: [],
      sshopStr: "",
      sshopID: "",
      shopCheckText: "全部店铺",
      shopCheckidx: -1,
      isIndexSix: false,
      tableDatas: [{
          date: '储值充值',
          name:'',
          id: 2,
          number:601050201,
          moneyList:[]
        }, {
          date: '计次充值',
          name:'',
          id:3,
          moneyList:[]
        }, {
          date: '快速消费',
          name:'',
          moneyList:[],
          id:5,
        }, {
          date: '商品消费',
          name:'',
          moneyList:[],
          id:6,
        }, {
          date: '计次消费',
          name:'',
          moneyList:[]
        }, {
          date: '积分兑换',
          name:'',
          id: 8,
          number:601050206,
          moneyList:[]
        }, {
          date: '日常支出',
          name:'',
          id:9,
          moneyList:[]
        },
         {
          date: '新增会员',
          name:'',
          id: 10,
          number:601050106,
          moneyList:[]
        }, {
          date: '商品库存',
          name:'',
          id: 11 ,
          number:601050101,
          moneyList:[]
        },  
         {
          date: '总计',
          moneyList:[]
        }, {
          date: '营业实收',
          moneyList:[]
        }],
        loading: true
    };
  },
  computed: {
    ...mapGetters({
      dataData: "businessReportData",
      dataState: "businessReportState",
      dataList: "businessReportList",
      dataListState: "businessReportListState",
      dataListArr: "businessReportListARR",
      shopList: "shopList"
    })
  },
  watch: {
    dataState(data) {
      let payintegral
      if(data.data.Exchange.PAYINTEGRAL==undefined){
          payintegral=0;
      }else{
          payintegral=data.data.Exchange.PAYINTEGRAL;
      }
      this.tableDatas[0].name = "销售额" + data.data.AddMoney.COUNT +" , " + "单数" + 1;
      this.tableDatas[1].name = "销售额" + data.data.AddCountMoney.COUNT +" , " + "单数" + 1;
      this.tableDatas[2].name = "销售额" + data.data.QuickSaleMoney.COUNT +" , " + "单数" + 1;
      this.tableDatas[3].name = "销售额" + data.data.GoodsSaleMoney.COUNT +" , " + "单数" + 1;
      this.tableDatas[4].name = "消费次数" + data.data.CountSaleQty.QTY +" , " + "单数" + data.data.CountSaleQty.COUNT;
      this.tableDatas[5].name = "兑换积分" + payintegral +" , " + "单数" + data.data.Exchange.BILLCOUNT;
      this.tableDatas[6].name = "日常支出" + data.data.ChargesMoney.MONEY +" , " + "单数" + data.data.ChargesMoney.COUNT;
      this.tableDatas[7].name = "新增会员" + data.data.AddVip.ADDVIPCOUNT +"位" +" , " + "共" + data.data.AddVip.ALLVIPCOUNT +"位";
      this.tableDatas[8].name = "库存总数:" + data.data.GoodsStock.STOCKQTY;

      this.loading = false;
      
      this.nameList=this.dataData.AddCountMoney.PAYTYPENAME.split(',');
      this.tableDatas[0].moneyList=this.dataData.AddMoney.MONEY.split(',');
      this.tableDatas[1].moneyList=this.dataData.AddCountMoney.MONEY.split(',');
      this.tableDatas[2].moneyList=this.dataData.QuickSaleMoney.MONEY.split(',');
      this.tableDatas[3].moneyList=this.dataData.GoodsSaleMoney.MONEY.split(',');

      this.tableDatas[4].moneyList=[]
      this.tableDatas[5].moneyList=[]
      this.tableDatas[6].moneyList=[]
      this.tableDatas[7].moneyList=[]
      this.tableDatas[8].moneyList=[]


      for(var i=1 ;i<=this.nameList.length;i++){
        this.tableDatas[4].moneyList.push("--")
      }
      for(var i=1 ;i<=this.nameList.length;i++){
        this.tableDatas[5].moneyList.push("--")
      }
      for(var i=1 ;i<=this.nameList.length;i++){
        this.tableDatas[6].moneyList.push("--")
      }
      for(var i=1 ;i<=this.nameList.length;i++){
        this.tableDatas[7].moneyList.push("--")
      }
      for(var i=1 ;i<=this.nameList.length;i++){
        this.tableDatas[8].moneyList.push("--")
      }
      // 总计计算 
      for(var j=0;j<this.nameList.length;j++){
          this.tableDatas[9].moneyList[j] = 
            parseFloat(this.tableDatas[0].moneyList[j]) + 
            parseFloat(this.tableDatas[1].moneyList[j]) +
            parseFloat(this.tableDatas[2].moneyList[j]) +
            parseFloat(this.tableDatas[3].moneyList[j])

          this.tableDatas[10].moneyList[j] = 
            parseFloat(this.tableDatas[0].moneyList[j]) + 
            parseFloat(this.tableDatas[1].moneyList[j]) +
            parseFloat(this.tableDatas[2].moneyList[j]) +
            parseFloat(this.tableDatas[3].moneyList[j])
      }
      // let moneyToy=0;
      // for(var i in this.tableDatas[9].moneyList){
      //   moneyToy +=parseFloat(this.tableDatas[9].moneyList[i])
      // }
        this.tableDatas[9].name=this.tableDatas[10].moneyList[j];
        this.tableDatas[10].name=this.tableDatas[10].moneyList[j];
    }
  },
  methods: {
    ExportReportData() {
        console.log("this.multipleSelection")
        console.log(this.multipleSelection)
        // 获取导出数据
        if (this.multipleSelection.length > 0) {
            this.exportExcel(this.multipleSelection);
            return;
        }
    },
    exportExcel(arr) {
        // 导出到excel
        var list = [...arr];
        for (var i = 0; i < list.length; i++) {
            list[i].SEX = this.formatSex(list[i]);
            list[i].STATUS = this.formatStatus(list[i]);
            list[i].CREATEDATE = this.filterTime(
                new Date(list[i].CREATEDATE)
            );
            list[i].INVALIDDATE = this.filterTime(
                new Date(list[i].INVALIDDATE)
            );
            list[i].LASTTIME = this.filterTime(new Date(list[i].LASTTIME));
            list[i].BIRTHDATE =
                list[i].BIRTHDATE > 0 && list[i].BIRTHDATE
                    ? this.filterTime(new Date(list[i].BIRTHDATE))
                    : "";
        }
        var head = [
            "名称",
            "卡号",
            "性别",
            "生日",
            "手机号",
            "余额",
            "等级",
            "标签",
            "积分",
            "次卡",
            "地址",
            "店铺",
            "创建日期",
            "有效日期",
            "最后登录日期",
            "状态",
            "备注"
        ];
        var val = [
            "NAME",
            "CODE",
            "SEX",
            "BIRTHDATE",
            "MOBILENO",
            "MONEY",
            "LEVELNAME",
            "VIPFLAG",
            "INTEGRAL",
            "PAYCOUNT",
            "ADDRESS",
            "SHOPNAME",
            "CREATEDATE",
            "INVALIDDATE",
            "LASTTIME",
            "STATUS",
            "REMARK"
        ];
        var title = "会员导出" + this.getNowDateTime();
        this.export2Excel(head, val, list, title);
    },
    getNewData(data) {
      // 当前数据
      this.dateBE[0] = data.BeginDate;
      this.dateBE[1] = data.EndDate;
      this.$store.dispatch("getbusinessReportData", data).then(() => {
        this.loading = true;
        this.ruleFrom = Object.assign({}, data);
        this.isIndexSix = false;
      });
    },
    getNewList(index,number) { 
      let sendData = {
        obj: { index:index, obj: "business" },
        data: Object.assign({}, this.ruleFrom)
      };
      if (index == 6 && this.isIndexSix) {
        sendData.data = {
            ShopId: this.shopCheckidx == -1?this.sshopStr:this.sshopID,
            BeginDate: this.dateBE[0],
            EndDate: this.dateBE[1],
            Filter: this.searchText
          }
        this.loading = false;
      } else {
        this.sshopID = "";
        this.dateBE = [];
        this.searchText = "";
        this.loading = true;
      }
      this.ruleFrom2 = Object.assign({}, sendData);
      this.$store.dispatch("clearbusinessReportList", index).then(() => {
        this.$store.dispatch("getbusinessReportList", sendData);
        this.title = this.dataListArr[index].title;
      });
      this.sshopStrFun();
    },
    getNewList2(data){
      this.getNewList(data.index)
    },
    sshopStrFun() {
      if (!this.sshopStr) {
        let str = "";
        for (let i = 0; i < this.shopList.length; i++) {
          str += this.shopList[i].ID;
          if (i < this.shopList.length - 1) {
            str += ",";
          }
        }
        this.sshopStr = str;
        this.$store.dispatch("selectingShop", {});
      }
    },
    shopCheckfun(index) {
      if (index == -1) {
        this.shopCheckidx = -1;
        this.shopCheckText = "全部店铺";
        this.sshopStrFun();
        this.sshopID = '';
      } else {
        this.shopCheckidx = index;
        this.shopCheckText = this.shopList[index].NAME;
        this.sshopID = this.shopList[index].ID;
        this.$store.dispatch("selectingShop", {
          ID: this.shopList[index].ID,
          NAME: this.shopList[index].NAME
        });
      }
      this.isIndexSix = true;
      this.getNewList(6);
    }
  },
  created() {
    this.$store
      .dispatch("getbusinessReportData",{
            ShopId: this.theShopId,
            BeginDate: this.getTimeStamp(),
            EndDate: new Date().getTime()
        })
      .then(() => {
        this.loading = true;
        this.ruleFrom = {
            ShopId: this.theShopId,
            BeginDate: this.getTimeStamp(),
            EndDate: new Date().getTime()
        }
        this.$store.dispatch("selectingShop", {
          ID: this.theShopId,
          NAME: this.theShopName
        });
      });
  },
  components: {
    listPage: () => import("@/components/reports/management/tableList"),
    headerPage: () => import("@/components/header")
  }
};
</script>
<style scoped>
.tableStock{
  height:400px;
  /* border:1px solid #ddd;  */
  border-right:0; 
  border-bottom:0;
}
 .tableStock thead{
    background:#F8F8F8;
    color:#333333; 
    height:36px; 
    line-height:36px;
  }
.tableStock thead tr th{
    border-right:1px solid #EBEEF5;
}
.tableStock   tbody tr{
    height: 36px; 
    line-height: 36px;
    
  }

.tableStock tbody tr:hover{
      background: #ecf5ff
    }
    .tableStock   tfoot tr{
      height:36px; line-height: 36px; 
      
  }
.el-header{
  padding: 0 !important;
}
.el-main{
  padding: 0px !important;
}
.member-main-top{
  width: 100%;
  height: 80px;
  background: #fff;
}
.member-main-table{
  margin-top: 8px;
  width: 99%;
  margin-left: 0.5%;
  margin-right: 0.5%;
  height: 600px;
  background: #fff;
}
.member-header{
  display: flex;
  align-items: center;
  height: 50px;
  border-bottom: 1px solid #d7d7d7;
  background: #fff;
}
.center-title{
  width: 100px;
  text-align: center;
  height: 50px;
  line-height: 50px;
  border: solid 1px #d7d7d7;
}
.center-cont{
  /* width: 100px; */
  text-align: center;
  height: 35px;
  line-height: 35px;
  margin-left: 25px;
}
.center-cont-ul{
  display: flex;
}
.center-cont-ul li{
  width: 58px;
  text-align: center;
  margin-right: 25px;
}
.center-cont-ul li.selected {
    color: #2589FF;
    border-bottom: 2px solid #2589FF;
}
.el-header{
  padding: 0 !important;
}
.shop{
  line-height: 50px;
  height: 50px;
  text-align: right;
  padding-right: 20px;
  border-bottom: 1px solid #d7d7d7;
  background: #fff;
}
.table-cont{
  width: 98%;
  margin-left: 1%;
  margin-right: 1%;
  padding-top: 15px;
}
</style>